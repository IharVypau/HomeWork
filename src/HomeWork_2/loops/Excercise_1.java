package HomeWork_2.loops;

import java.util.Scanner;

/*
* 1. Циклы. Для преобразования строки в число можно использовать http://proglang.su/java/numbers-parseint, если хотите можете добавить проверки на корректность ввода данных. Число положительное, максимум long:
   1.1. Перемножить числа от 1 до числа (включительно) введенного через аргумент к исполняемой программе.
   * Есть нюанс с переполнением, можно добавить проверки и сообщения пользователю.
   Пример: Ввели 5, должно получиться в консоли: 1 * 2 * 3 * 4 * 5 = ответ
   1.1.1. Используя только цикл
   1.1.2.* Используя рекурсию
   1.2. Все цифры из числа введенного через аргумент к исполняемой программе перемножить между собой и вывести ход вычислений в консоль. Пользователь обязан ввести целое число. Если ввели не целое то выдать сообщение о том что пользователь ввёл некорректные данные.
   1.2.1 Пример: Ввели 181232375, должно получиться в консоли: 1 * 8 * 1 * 2 * 3 * 2 * 3 * 7 * 5 = 10 080
   1.2.2 Пример: Ввели 99.2, должно получиться в консоли: Введено не целое число
   1.2.3 Пример: Ввели Привет, должно получиться в консоли: Введено не число
   1.3. Возведение в степень. Через консоль пользователь вводит два числа. Первое число это число которое мы будем возводить, Второе число это степень в которую возводят первое число. Степень - только положительная и целая. Возводимое число - может быть отрицательным и оно будет дробным. Math использовать нельзя.
   1.3.1 Пример: Ввели 18 и 5, должно получиться в консоли: 18.0 ^ 5 = 1 889 568.0
   1.3.2 Пример: Ввели 7.5 и 2, должно получиться в консоли: 7.5 ^ 2 = 56.25
   1.4.* Умножать число long a = 1; пока не произойдёт переполнение. В конце в консоль вывести сообщение со значением до переполнения и после переполнения. Умножать на:
   1.4.1. 3
   1.4.2. 188
   1.4.3. -19
   1.4.4. Да и вообще на любое целочисленное
   1.5. Задачи в презентации. На сайте есть пояснения по каждой из этих задач. Все задачи в одном классе, в отдельных методах.
   1.5.1. Найти наибольшую цифру натурального числа
   1.5.2. Вероятность четных случайных чисел
   1.5.3. Посчитать четные и нечетные цифры числа
   1.5.4. Ряд Фибоначчи
   1.5.5. Вывести ряд чисел в диапазоне с шагом
   1.5.6. Переворот числа
   1.6. Вывести таблицу умножения в консоль. В консоли должно получиться также как и на картинке (динозаврика рисовать не надо): https://www.dropbox.com/s/ibakfuppvy2w32g/multiplication_table.jpeg?dl=0
* */
public class Excercise_1 {
    final static int MAX_NUMBER = 100;
    static long result = 1;
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.print("Введите число больше нуля и меньше 100: ");
        int num = input.nextInt();
        if(num > 0 && num <= MAX_NUMBER){
            result = inLoop(num);
            //result = inRecursion(num);
            if(result > 0){
                StringBuffer strBuff = new StringBuffer();
                for(int i = 1; i < num; i++){
                    strBuff.append(i).append(" * ");
                }
                System.out.println(strBuff.toString() + num + " = " + result);
            } else{
                System.out.println("Результат выполнения выражения превышает 64 битное целое число (long).");
            }
        } else{
            System.out.println("Ввели некорректное число");
        }
    }
    private static long inLoop(long number){
        long result = number;
        while(--number > 1) {
            result *= number;
            if(result < 0) {
                result = -1;
                break;
            }
        }
       return result;
    }
    private static long inRecursion(long number){
        if(number <= 1) return 1;
        else {
            long result = number * inRecursion(number-1);
            return (result < 0) ? -1 : result;
        }
    }
}
