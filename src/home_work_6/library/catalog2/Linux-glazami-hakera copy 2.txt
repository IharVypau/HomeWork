
   Михаил Фленов
   Linuxглазами хакера
   Предисловие
   Данная книга посвящена рассмотрению одной из самых популярных операционных систем (ОС), устанавливаемых на серверы — ОС Linux. Для домашнего применения эта система пока еще не пользуется такой популярностью, как среди профессиональных администраторов, но в последнее время наметились предпосылки для захвата и этого рынка.
   Установка ОС становится все проще, а графический интерфейс и удобство работы в некоторых случаях не уступает самой прославленной в среде малого бизнеса ОС Windows.
   Эта книга будет полезна администраторам Linux и тем пользователям, которые хотят познакомиться с этой системой поближе. Рассматриваемые вопросы настройки и безопасности пригодятся специалистам, использующим различные ОС, потому что большая часть информации не привязана к определенной системе.
   Вы сможете узнать, как хакеры проникают на серверы и защититься от вторжения. Так как некоторые примеры из этой книги могут быть использованы не только для обороны, но и для нападения, я хотел бы предостеречь юных взломщиков. Здоровое любопытство — это хорошо, но помните, что правоохранительные органы не спят и всегда добиваются своего. Если один раз вам повезло со взломом и никто не обратил на это внимания, то в следующий раз вы можете оказаться в руках правосудия.
   Часть книги написана с точки зрения хакера и демонстрирует, как они проникают в систему. В надежде на то, что эту информацию не будут использовать для взлома серверов, я старался сделать упор именно на защиту и некоторые вещи оставлял за пределами изложения или просто не договаривал, чтобы не появилось соблазна воспользоваться методами хакеров и нарушить закон. Конечно же, чтобы реализовать мои идеи (довести до логического конца), нужно потратить несколько минут на программирование или на поиск в Интернете. Но несмотря на то, что книга может послужить отправной точкой для хакера, я надеюсь, что этого не произойдет. Помните о законности ваших действий.
   Любой объект может быть рассмотрен с разных точек зрения. Простой пример из жизни — нож, являясь столовым предметом, при определенных обстоятельствах становится орудием убийства или средством самообороны. Точно так же и методы хакера, которые будут рассматриваться в этой книге, могут быть восприняты как советы для повседневного ухода за ОС, способы защиты от проникновения и средства взлома системы. Я надеюсь, что вы не будете использовать полученные знания в разрушительных целях, это не украшает человека. Зачем вам нужна "черная" популярность взломщика? Не лучше ли посвятить себя более полезным вещам.
   Несмотря на явное стремление Linux поселиться в домашних компьютерах, в этой ОС настройка пока еще слишком сложная и содержит множество параметров, которые большинству пользователей не нужны. Если просто закрыть глаза и оставить все значения по умолчанию, то об истинной безопасности Linux не может быть и речи. Ни одна ОС не будет работать надежно и с максимальной защитой при таких настройках. Производитель не может заранее знать, что нам понадобится, и делает все возможное, чтобы программа работала на любой системе, а для этого приходится включать много дополнительных функций, что делает систему избыточной.
   Так уж повелось, что администраторы Linux должны иметь больше опыта и знаний, чем специалисты Windows, и это связано как раз со сложностями настройки. В данной книге я постарался максимально доступно рассказать вам про ОС Linux, и при этом попытался сделать это с позиции хакера.
   Почему книга называется "Linux глазами хакера", и что это за глаза? Этот вопрос интересует многих моих читателей. Когда мы берем в руки книгу, то надеемся, что ее внешний вид соответствует внутреннему. В данном случае речь идет о том, какое содержимое будет отвечать этому названию? Для ответа на этот вопрос необходимо четко понимать, кто такой хакер и что он видит в ОС.
   Когда меня спрашивают, что я подразумеваю под словом "хакер", я привожу простейший пример: как администратор вы установили и заставили работать ОС, но если удалось настроить ее на максимальную производительность и безопасность, то вы — хакер.
   Умения хакера должны быть направлены на то, чтобы создать что-либо лучше других (быстрее, удобнее и безопаснее). Именно такой является сама ОС Linux, сотворенная хакерами для всего мира.
   Данная книга рассматривает ОС, начиная с самых основ и до сложных манипуляций системой. Весь излагаемый материал представлен простым и доступным каждому языком. Благодаря этому вам не понадобится дополнительная литература для изучения ОС Linux. Всю информацию можно будет получить из одних рук. Для более глубокого изучения вопроса вам могут потребоваться только хорошее знание английского языка и чтение документации ил и файлов HOWTO, которые поставляются с системой Linux.
   Главное отличие книги в том, что о безопасности и производительности мы будем говорить не в отдельных заключительных главах, что является большой ошибкой, а по мере необходимости. Когда человек уже приобрел навыки неэффективной работы с системой, то переучиваться будет сложно. Именно поэтому мы будем разбирать последовательно (от азов до сложных вопросов) все аспекты каждой рассматриваемой темы, аккуратно раскладывая полученные знания "по полочкам".
   Описание применения и просто администрирование Linux всегда можно найти в Интернете или в документации на ОС, а вот информацию по эффективному использованию найти сложнее, а все имеющиеся сведения являются фрагментарными, и их тяжело сводить в одно целое. А ведь безопасность не любит обрывочных данных. Если упустить хоть одну мелочь, компьютер оказывается уязвимым для взлома.
   В качестве дополнительной информации по безопасности компьютера и сетей советую прочитать мою книгу "Компьютер глазами хакера" [3], в которой приводится достаточно много общих сведений по этим вопросам.
   Несмотря на то, что данная книга направлена в большей степени на описание безопасности ОС Linux, многие рассматриваемые в ней проблемы могут вам пригодиться и при построении защищенного Linux-сервера. Точно так же книга "Linux глазами хакера" будет полезна и специалистам по безопасности Windows-систем.
   В этой книге не рассматриваются вопросы, связанные с вирусами, потому что в настоящее время вирусная активность в ОС Linux минимальна, но это не значит, что опасности не существует. Угроза есть всегда, а защита от вирусов схожа с защитой от троянских программ, которых для Linux достаточно много. Об атаках вирусов и возможности их отражения можно также прочитать в книге "Компьютер глазами хакера" [3].
   Итак, давайте знакомиться с Linux с точки зрения хакера, и я уверен, что вы посмотрите на нее совершенно другими глазами и найдете для себя много нового и интересного.Благодарности
   В каждой своей книге я стараюсь поблагодарить всех, кто участвовал в ее создании и помогал появиться на свет. Без этих людей просто ничего бы не получилось.
   Первым делом я хотел бы отметить издательство "БХВ-Петербург", с которым работаю уже несколько лет. Спасибо руководству, редакторам и корректорам, которые работаютсо мной и помогают сделать книгу такой, какой я ее задумывал. Ведь писать приходится в тяжелых по срокам условиях, но иначе нельзя, т.к. информация устареет раньше, чем книга попадет на прилавок.
   Не устану благодарить родителей, жену и детей за их терпение. После основной работы я прихожу домой и тружусь над очередной книгой. Таким образом, семья может видеть меня только за компьютером, а общаться со мной очень сложно, потому что все мысли устремляются далеко в виртуальную реальность.
   Большая признательность моим друзьям и знакомым, которые что-то подсказывали, помогали идеями и программами.
   Отдельное спасибо администраторам моего провайдера, которые позволили тестировать некоторые описываемые в данной книги методы на их оборудовании и серверах. Я старался работать аккуратно и ничего не уничтожить. Вроде бы так и получилось?.
   Так уж выходит, но в написании каждой книги участвуют и животные. Эта работа не стала исключением. Мой новый кот Чикист с 23:00 до 1:00 ночи гуляет по квартире и кричит, яне могу уснуть, а значит, больше времени уделяю работе.
   Хочется поблагодарить еще одного кота, который является ассистентом в пакете программ MS Office. Книгу я писал в MS Word, а ОС Linux работала в виртуальной машине, чтобы можно было делать снимки экрана. Если на меня "бросали" ребенка, то кот-ассистент помогал занять моего годовалого сына, выступая в роли няни. Я сажал сына Кирилла рядом, и он спокойно играл с котом на экране монитора, а я мог продолжать работать над книгой. Правда, иногда приходилось спасать кота и монитор, когда сын начинал маленькой ручонкой неуклюже гладить полюбившееся животное.
   А самая большая благодарность — вам за то, что купили книгу, и моим постоянным читателям, с которыми я регулярно общаюсь на форуме сайтаwww.vr-online.ru.Последние работы основываются на их вопросах и предложениях. Если у вас появятся какие-то проблемы, то милости прошу на этот форум. Я постараюсь помочь по мере возможности и жду любых комментариев по поводу этой книги. Ваши замечания помогут мне сделать мою работу лучше.
   Глава 1
   Введение
   Однажды я показывал администратору ОС Windows, как устанавливать и работать с Linux. Сам процесс инсталляции ему понравился, потому что в последних версиях он достаточно прост. Но когда мы установили и решили настроить Samba-сервер, последовала куча вопросов типа: "А зачем настраивать Samba?", "Почему нельзя получить доступ автоматически?" Администраторы Windows-систем ленивы и привыкли, что ОС сама делает за них все. что нужно, но когда их систему взламывают, начинают задавать вопросы: "А почему Microsoft не дала нам нужных инструментов, чтобы запретить определенные действия?".
   Если смотреть на ОС Linux с точки зрения пользователя, то после установки системы уже ничего настраивать не надо. Можно сразу же приступать к работе с любыми офиснымиприложениями и пользовательскими утилитами. Но если речь идет о сетевых и серверных программах, то здесь уже требуются более сложные настройки, и ничего автоматически работать не будет. По умолчанию в системе практически все действия, которые могут привести к нежелательному результату или вторжению по сети, запрещены. Для изменения ограничений нужно настраивать конфигурационные файлы, редактировать которые крайне неудобно, или использовать специализированные утилиты, большинство из которых имеют интерфейс командной строки.
   Из-за этих неудобств мой знакомый администратор Windows-систем сказал: "Linux придумали администраторы, которым нечего делать на работе, для того, чтобы играться с конфигурационными файлами". Через неделю этот же человек настраивал сервис IIS (Internet Information Services, информационные сервисы Интернета) на новом сервере с ОС Windows 2003. Он ругалсятеми же словами, потому что эта служба по умолчанию не устанавливается с ОС, и прежде чем начать работать, нужно ее подключить и четко прописать, что должно использоваться, а что нет.
   Корпорация Microsoft начинала делать ОС по принципу "лишь бы было удобно", поэтому достаточно было подключить требуемые компоненты. Но теперь Windows становится с каждым годом все сложнее, большинство удобных функций, обеспечивающих защиту, просто отключаются, и при необходимости их приходится открывать. В Linux все было наоборот, эту ОС создавали с точки зрения "лишь бы было безопаснее", а теперь двигаются в сторону наращивания сервисов.
   Удобства и безопасность — две стороны одной медали, поэтому производителю приходится чем-то жертвовать.
   1.1.Атаки хакеров
   Прежде чем знакомится с Linux и ее принципами безопасности, мы должны знать, как хакеры могут проникать в систему. Для того чтобы защитить систему, нужно иметь представление о возможных действиях злоумышленника. Давайте познакомимся с процессом взлома компьютера. Мы должны знать, о чем думают хакеры, чем они дышат и что едят?.Только так мы сможем построить неприступную информационную стену для сервера или сети.
   Невозможно дать конкретные рецепты взломов. В каждом случае это процесс, который зависит от самой системы и настроек ее безопасности. Чаще всего взлом происходит через ошибки в каких-либо программах, а каждый администратор может использовать различный софт.
   Почему количество атак с каждым годом только увеличивается? Раньше вся информация об уязвимостях хранилась на закрытых BBS (Bulletin Board System, электронная доска объявлений) и была доступна только избранным. К этой категории относились и хакеры. Именно они и совершали безнаказанные атаки, потому что уровень просвещенности и опытности таких людей был достаточно высок.
   С другой стороны, элита хакерского мира состояла в основном из добропорядочных людей, для которых исследования в области безопасности не являлись целью разрушения.
   В настоящее время информация об уязвимостях лежит на каждом углу и является достоянием общественности. Теперь взломом может заниматься кто угодно. Тут же хочется спросить борцов за свободу информации: "Как же так получилось?" Просто чрезмерная свобода в конце концов ведет к разрушению. Есть определенная категория людей, которых хлебом не корми, дай где-нибудь напакостить. Если человек, используя общедоступную информацию, поддастся этой слабости, то он превратится во взломщика.
   Злоумышленники при проникновении в систему могут преследовать разные цели.
   1. Утечка информации — вскрытие сервера для скачивания каких-либо секретных данных, которые не должны быть доступны широкой общественности. Такие взломы чаще всего направляют против компаний для кражи отчетности, исходных кодов программ, секретной документации и т.д., их выполняют профессиональные хакеры по заказу или для получения собственной выгоды.
   2. Нарушение целостности — изменение или уничтожение данных на сервере. Такие действия могут производиться против любых серверов в сетях Интернет/интранет. В качестве взломщиков могут выступать не только профессионалы, но и любители или даже недовольные сотрудники фирм.
   3. Отказ от обслуживания — атака на сервер с целью сделать его недосягаемым для остальных участников сети. Этим занимаются, в основном, любители, желая нанести вред.
   4. Рабство — получило распространение в последнее время. Сервер захватывается для дальнейшего использования в нападении на другие серверы. Например, для осуществления атаки типа "Отказ от обслуживания" чаще всего нужны значительные ресурсы (мощный процессор и быстрый доступ в сеть), которые отсутствуют на домашнем компьютере. Для осуществления таких атак захватывается какой-либо слабо защищенный сервер в Интернете, обладающий необходимыми ресурсами, и используется в дальнейших взломах.
   Атаки могут быть трех видов:
   1. Внутренняя — взломщик получил физический доступ к интересующему его компьютеру. Защитить системный блок сервера от злоумышленника не так уж и сложно, потому чтоможно оградить доступ к серверу сейфом и поставить охрану.
   2. Внешняя из глобальной сети — удаленный взлом через сеть. Именно этот вид атаки является самым сложным для защиты. Даже если поставить самый лучший сейф от удаленной атаки (Firewall) и постоянную охрану для наблюдения (программы мониторинга и журналирования), безопасность не может быть гарантированной. Примерами этого являются взломы самых защищаемых серверов в сети (yahoo.com,microsoft.com,серверы NASA и т.д.).
   3. Внешняя из локальной сети — это проникновение, совершенное пользователем вашей сети. Да, хакеры бывают не только в Интернете, соседи по кабинету тоже могут пытаться взломать сервер или ваш компьютер ради шутки или с целью мести.
   При построении обороны мы должны понимать, как хакеры атакуют компьютеры своих жертв. Только тогда можно предотвратить нежелательное вторжение и защитить систему. Давайте рассмотрим основные методы нападения, используемые хакером, и способы реализации. Для лучшего понимания процесса будем рассуждать так, как это делает взломщик.
   Единственное, чего мы не будем затрагивать, так это вопросы социальной инженерии. Это тема отдельной книги и затрагивать ее не имеет смысла.
   1.1.1.Исследования
   Допустим, что у вас есть некий сервер, который нужно взломать или протестировать на защищенность от проникновения. С чего нужно начинать? Что сделать в первую очередь? Сразу возникает очень много вопросов и ни одного ответа.
   Четкой последовательности действий нет. Взлом — это творческий процесс, а значит, и подходить к нему надо с этой точки зрения. Нет определенных правил и нельзя все подвести под один шаблон. Зато могу дать несколько рекомендаций, которых желательно придерживаться.Сканирование
   Самое первое, с чего начинается взлом или тест системы на уязвимость, — сканирование портов. Для чего? А для того, чтобы узнать, какие сервисы (в Linux это демоны) установлены в системе. Каждый открытый порт — это сервисная программа, установленная на сервере, к которой можно подсоединиться и выполнить определенные действия. Например, на 21 порту висит FTP-сервис. Если вы сможете к нему подключиться, то станет доступной возможность скачивания и закачивания на сервер файлов. Но это только в том случае, если вы будете обладать соответствующими правами.
   Для начала нужно просканировать первые 1024 порта. Среди них очень много стандартных сервисов типа FTP, HTTP, Telnet и т.д. Каждый открытый порт — это дверь с замочком для входа на сервер. Чем больше таких дверей, тем больше вероятность, что какой-то засов не выдержит натиска и откроется.
   У хорошего администратора открыты только самые необходимые порты. Например, если это Web-сервер, не предоставляющий доступ к почте, то нет смысла включать сервисы почтовых серверов. Должен быть открыть только 80 порт, на котором как раз и работает Web-сервер.
   Хороший сканер портов устанавливает не только номер открытого порта, но и определяет установленный на нем сервис. Жаль, что название не настоящее. а только имя возможного сервера. Так, для 80 порта будет показано "HTTP". Желательно, чтобы сканер умел сохранять результат своей работы в каком-нибудь файле и даже распечатывать. Если этой возможности нет, то придется переписать все вручную и положить на видное место. В дальнейшем вам пригодится каждая строчка этих записей.
   После этого можно сканировать порты свыше 1024. Здесь стандартные сервисы встречаются редко. Зачем же тогда сканировать? А вдруг кто-то до вас уже побывал здесь и оставил незапертой дверку или установил на сервер троян. Большинство троянских программ держат открытыми порты свыше 1024, поэтому, если вы администратор и обнаружили такой порт, необходимо сразу насторожиться. Ну а если вы взломщик, то необходимо узнать имя троянской программы, найти для нее клиентскую часть и воспользоваться дляуправления чужой машиной.
   На этом взлом может закончиться, потому что вы уже получили полный доступ к серверу без особых усилий. Жаль, что такое происходит очень редко, чаще всего нужно затратить намного больше усилий.
   Лет десять назад сканирование можно было проводить целыми пачками. В настоящее время все больше администраторов устанавливают на свои серверы утилиты, которые выявляют такие попытки сканирования и делают все возможное для предотвращения этого процесса. О том, как защитить свой сервер от сканирования и какие утилиты использовать, мы поговорим вгл. 12.
   Таким образом, сканирование становится непростой задачей. Сложность заключается в том, что нельзя исследовать порты пачками. Именно поэтому профессионалы предпочитают использовать ручной метод. Для этого достаточно выполнить команду:
   telnetсервер порт
   В данном случае с помощью командыtelnetмы пытаемся подключиться к серверу на указанный порт. Если соединение произошло удачно, то порт открыт, иначе — закрыт. Адрес сервера указывается в качестве первого параметра, а порт — это второй параметр. Если таким образом производить проверку не более 5 портов в час, то большинство программ выявления скана не среагируют, но сам процесс сканирования растянется на недели.
   Иногда может помочь утилита nmap, которая позволяет делать сканирование с использованием неполного цикла пакетов. Но современные программы обеспечения безопасности могут обнаружить использование этого метода.
   Так как уже на этапе сканирования администратор может занести ваш IP- адрес в список подозреваемых, желательно осуществлять проверку портов не со своего компьютера. Для этого взломщики заводят Web-сайт на сервере, позволяющем встраивать сценарии на языках PHP или Perl, используя бесплатный хостинг, где во время регистрации не требуют персональных данных, а если запрашивают, то можно ввести неверные данные, потому что их нельзя проверить. После этого к серверу можно подключаться через прокси-сервер и по безопасному соединению управлять собственными сценариями, которые и будут сканировать компьютер жертвы.
   Теперь мы в курсе, какие двери у сервера существуют и как это можно определить. Задействованные порты — это всего лишь запертые ворота, и мы пока не знаем, как их открыть. Дальше потребуется больше усилий.
   Самым популярным средством сканирования является утилита nmap. Она завоевала сердца хакеров, потому что, во-первых, предоставляет широкие возможности и, во-вторых, не все средства защиты ее определяют. Например, программа антисканирования, установленная на сервере, следит за попытками последовательно или параллельно подключиться на несколько портов. Но nmap может не доводить дело до соединения.
   Процесс установки соединения с удаленным компьютером разбивается на несколько этапов. Сначала компьютер посылает пакет с запросом на нужный порт сервера, а тот в ответ должен отправить специальный пакет (не будем вдаваться в подробности протокола TCP, а ограничимся общими понятиями). Только после этого может устанавливаться виртуальное соединение. Сканер nmap может прервать контакт после первого ответа сервера, т.к. уже ясно, что порт открыт и нет смысла продолжать диалог по установке соединения.
   Таким образом, программы антисканирования воспринимают такие контакты за ошибки и не сигнализируют администратору о возможной атаке.Определение ОС
   Сканирование — это всего лишь самый начальный этап, который вам еще ничего особенного не сказал. Самое главное перед дальнейшим взломом — определить, какая именно установлена ОС. Желательно знать и версию, но это удается не всегда, да и на первых порах изучения системы можно обойтись без конкретизации.
   Как определяется тип ОС? Для этого есть несколько способов.
   1. По реализации протокола TCP/IP.
   Различные ОС по-разному реализуют стек протоколов. Программа-клиент (например, nmap) просто анализирует ответы на запросы от сервера и делает вывод об установленной ОС. В основном, это заключение расплывчатое: Windows или Linux. Точную версию таким образом узнать невозможно, потому что в Windows 2000/XP/2003 реализация протокола практически неменялась, и отклики сервера будут одинаковыми. Даже если программа определила, что на сервере установлен Linux, то какой именно дистрибутив — вам никто не скажет, а ведь уязвимости в них разные. И поэтому такая информация — это только часть необходимых вам данных для взлома сервера.
   2. По ответам разных сервисов.
   Допустим, что на сервере жертвы есть анонимный доступ по FTP. Вам нужно всего лишь присоединиться к нему и посмотреть сообщение при входе в систему. По умолчанию в качестве приглашения используется надпись типа "Добро пожаловать на сервер FreeBSD4.0 версия FTP-клиента X.XXX". Если вы такое увидели, то еще рано радоваться, т.к. неизвестно, правда это или нет. Если администратор сервера достаточно опытный, то он, скорей всего, поменяет текст таких сообщений.
   Если надпись приглашения отражает действительность, то администратор — "чайник" со стажем. Опытный администратор всегда изменяет приглашение, заданное по умолчанию. А вот хороший специалист может написать и ложное сообщение. Тогда на сервере с Windows NT 4.0 появится приглашение, например, в Linux. В этом случае злоумышленник безуспешно потратит очень много времени в попытках сломать Windows NT через дыры Linux. Поэтому не очень доверяйте надписям и старайтесь перепроверить любыми другими способами.
   Чтобы вас не обманули, обязательно обращайте внимание на используемые на сервере сервисы, например, в Linux не будут крутиться страницы, созданные по технологии ASP. Такие вещи подделывают редко, хотя возможно. Достаточно немного постараться: применить расширение asp для хранения PHP-сценариев и перенаправлять их интерпретатору PHP.Таким образом, хакер увидит, что на сервере работают файлы asp, но реально это будут PHP-сценарии.
   Следовательно, задача защищающейся стороны — как можно сильнее запутать ситуацию. Большинство неопытных хакеров верят первым впечатлениям и потратят очень много времени на бесполезные попытки проникновения. Таким образом, вы сделаете взлом слишком дорогим занятием.
   Задача хакера — распутать цепочки и четко определить систему, которую он взламывает. Без этого производить в дальнейшем какие-либо действия будет сложно, потому что хакер даже не будет знать, какие команды ему доступны после вторжения на чужую территорию и какие исполняемые файлы можно подбрасывать на сервер.
   Для определения ОС хакеры любят использовать утилиту nmap. Основные возможности программы направлены на сканирование портов, но если запустить программу с параметром -о, то она попытается определить тип операционной системы. Конечно же, существует вероятность ошибки, но возможна и правильная работа.Используем скрипты
   Итак, теперь вы знаете, какая на сервере установлена ОС, какие порты открыты и какие именно серверы висят на этих портах. Вся эта информация должна быть у вас записана в удобном для восприятия виде: в файле или хотя бы на бумаге. Главное, чтобы комфортно было работать.
   На этом можно остановить исследования. У вас есть достаточно информации для простейшего взлома с помощью дыр в ОС и сервисах, установленных на сервере. Просто посещайте регулярноwww.securityfocus.com.Именно здесь нужно искать информацию о новых уязвимостях. Уже давно известно, что большая часть серверов (по разным источникам от 70 до 90%) просто не латаются. Поэтому проверяйте все найденные ошибки на жертве, возможно, что-то и сработает.
   Если сервер в данный момент близок к совершенству, то придется ждать появления новых дыр и сплоитов (программа, позволяющая использовать уязвимость) к установленным на сервере сервисам. Как только увидите что-нибудь интересное, сразу скачайте сплоит (или напишите свой) и воспользуйтесь им, пока администратор сервера не залатал очередную уязвимость.
   1.1.2.Взлом WWW-сервера
   При взломе WWW-сервера есть свои особенности. Если на нем выполняются CGI/PHP или иные скрипты, то взлом проводится совершенно по-другому. Для начала нужно просканировать сервер на наличие уязвимых CGI-скриптов. Вы не поверите, но опять же по исследованиям различных компаний в Интернете работает большое количество "дырявых" скриптов. Это связано с тем, что при разработке сайтов изначально вносятся ошибки. Начинающие программисты очень редко проверяют входящие параметры в надежде, что пользователь не будет изменять код странички или адрес URL, где серверу передаются необходимые данные для выполнения каких-либо действий.
   Ошибку с параметрами имела одна из знаменитых систем управления сайтом — PHP-nuke. Это набор скриптов, позволяющих создать форум, чат, новостную ленту и управлять содержимым сайта. Все параметры в скриптах передаются через строку URL браузера, и просчет содержался в параметре ID. Разработчики предполагали, что в нем будет передаваться число, но не проверяли это. Хакер, знающий структуру базы данных (а это не сложно, потому что исходные коды PHP-nuke доступны), легко мог поместить SQL-запрос к базе данных сервера в параметр ID и получить пароли всех зарегистрированных на сайте пользователей. Конечно, клиенты будут зашифрованы, но для расшифровки не надо много усилий, и это мы рассмотрим чуть позже (см. разд. 14.10).
   Проблема усложняется тем, что некоторые языки (например, Perl) изначально не были предназначены для использования в сети Интернет. Из-за этого в них существуют опасные функции для манипулирования системой, и если программист неосторожно применил их в своих модулях, то злоумышленник может воспользоваться такой неосмотрительностью.
   Потенциально опасные функции есть практически везде, только в разных пропорциях. Единственный более или менее защищенный язык — Java, но он очень сильно тормозит систему и требует много ресурсов, из-за чего его не охотно используют Web-мастера. Но даже этот язык в неуклюжих руках может превратиться в большие ворота для хакеров с надписью: "Добро пожаловать!".
   Но самая большая уязвимость — неграмотный программист. Из-за нехватки специалистов в этой области программированием стали заниматься все, кому не лень. Многие самоучки даже не пытаются задуматься о безопасности, а взломщикам это только на руку.
   Итак, ваша первостепенная задача — запастись парочкой хороших CGI-сканеров. Какой лучше? Ответ однозначный — ВСЕ. Даже самый дрянной сканер может найти брешь, о которой неизвестно даже самому лучшему хакеру. А главное, что по закону подлости именно она окажется доступной на сервере. Помимо этого, нужно посещать все тот же сайтwww.securityfocus.com,где регулярно выкладываются описания уязвимостей различных пакетов программ для Web-сайтов.
   1.1.3.Серп и молот
   Там, где не удалось взломать сервер с помощью умения и знаний, всегда можно воспользоваться чисто русским методом "Серпа и молота". Это не значит, что серп нужно приставлять к горлу администратора, а молотком стучать по его голове. Просто всегда остается в запасе тупой подбор паролей.
   Давайте снова обратимся к статистике. Все исследовательские конторы пришли к одному и тому же выводу, что большинство начинающих выбирают в качестве пароля имена своих любимых собачек, кошечек, даты рождения или номера телефонов. Хорошо подобранный словарь может сломать практически любую систему, т.к. всегда найдутся неопытные пользователи с такими паролями. Самое страшное, если у этих "чайников" будут достаточно большие права.
   Вы до сих пор еще не верите мне? Давайте вспомним знаменитейшего "червя Морриса", который проникал в систему, взламывая ее по словарю. Собственный лексикон червя был достаточно маленький и состоял менее чем из ста слов. Помимо этого, при переборе использовались термины из словаря, установленного в системе. Там их было тоже не так уж много. И вот благодаря такому примитивному алгоритму червь смог поразить громаднейшее число компьютеров и серверов. Это был один из самых массовых взломов!!! Да, случай давний, но средний профессионализм пользователей не растет, т.к. среди них много опытных, но достаточно и начинающих.
   1.1.4.Локальная сеть
   Взлом в локальной сети может быть проще по многим причинам:
   ? компьютеры подключены по скоростному соединению от 10 Мбит и выше;
   ? есть возможность прослушивать трафик других компьютеров в сети;
   ? можно создавать подставные серверы;
   ? очень редко используются сетевые экраны, потому что их ставят в основном перед выходом в Интернет.
   Рассмотрим различные варианты взломов, которые получили наибольшее распространение.Прослушивание трафика
   В локальной сети есть свои особенности. Соединения могут осуществляться различными способами. От выбранного типа топологии зависит используемый вид кабеля, разъем и используемое оборудование. При подключении по коаксиальному кабелю могут использоваться две схемы: все компьютеры объединяются напрямую в одну общую шину иликольцо. Во втором случае крайние компьютеры тоже соединены между собой, и когда они обмениваются данными, все пакеты проходят через сетевую карту соседнего компьютера.
   Если используется такая топология, то весь трафик обязательно проходит через все компьютеры сети. Почему же вы его не видите? Просто ОС и сетевой адаптер сговорились и не показывают чужой трафик. Но если очень сильно захотеть, то, воспользовавшись программой-сниффером, можно и просмотреть все данные, проходящие мимо сетевой карточки, даже если они предназначены не вам.
   При подключении к Интернету с помощью сниффера можно увидеть только свой трафик. Чтобы позаимствовать чужую информацию, нужно сначала взломать сервер провайдера,а туда уже поставить сниффер и смотреть трафик всех клиентов. Это слишком сложно, поэтому способ через снифферы используют чаще всего в локальных сетях.
   Соединение по коаксиальному кабелю встречается все реже, потому что оно ненадежно и позволяет передавать данные максимум на скорости 10 Мбит/с.
   При объединении компьютеров через хаб (Hub) или коммутатор (Switch) используется топология "Звезда". В этом случае компьютеры с помощью витой пары получают одну общую точку. Если в центре стоит устройство типа Hub, то пакеты, пришедшие с одного компьютера, копируются на все узлы, подключенные к этому хабу. В случае с коммутатором пакеты будет видеть только получатель, потому что Switch имеет встроенные возможности маршрутизации, которые реализуются в основном на уровне MAC-адреса. В локальной сети, даже если вы отправляете данные на IP-адрес, применяется физический адрес компьютера. При работе через Интернет всегда используется IP-адресация, а на этом уровне работают далеко не все коммутаторы. Для того чтобы пакеты проходили по правильному пути, нужны уже более интеллектуальные устройства — маршрутизаторы. Они также передают набор данных только на определенную машину или другому маршрутизатору, который знает, где находится компьютер получателя.
   Таким образом, при использовании коммутаторов в локальной сети и из-за маршрутизации в Интернете прослушивание становится более сложным, и для выполнения этой задачи сниффер должен находиться на самом коммутаторе или маршрутизаторе.
   Работать с пакетами достаточно сложно, потому что в них содержится трудная для восприятия информация. Большой кусок данных разбивается на несколько пакетов, и вы будете видеть их по отдельности.
   Сейчас в сети можно скачать громадное количество снифферов и дополнений к ним. Всевозможные версии "заточены" под разные нужды, и тут необходимо выбирать именно изэтих соображений. Если вы ищете непосредственно пароли, то вам требуется сниффер, который умеет выделять данные о регистрации из общего трафика сети. В принципе, это не так сложно, если учесть, что все пароли и любая информация пересылаются в Интернет в открытом виде как текст, если не используется SSL-протокол (Secure Socket Layer, протокол защищенных сокетов).
   Преимущество от использования снифферов при взломе в том, что они никак не влияют на атакуемую машину, а значит, вычислить его очень сложно. В большинстве случаев даже невозможно узнать, что ваш трафик кем-то прослушивается в поисках паролей.Подставной адрес
   Очень часто серверы ограничивают доступ с помощью правил для сетевого экрана. Но блокировать абсолютно все обращения к любым портам не всегда удобно. Например, доступ к управляющим программам можно сохранить для определенного IP-адреса, с которого работает администратор. Каждый, кто попытается с другого адреса войти в запрещенную область, будет остановлен сетевым экраном.
   На первый взгляд, защита безупречна. Но существует такой метод атаки, как спуфинг, который подразумевает подделку IP-адреса авторизованного пользователя и вход в штурмуемый сервер. Старые сетевые экраны (да и дешевые современные) не могут определить фальшивый адрес в пакетах. Хороший Firewall может направить ping-команду компьютеру, чтобы убедиться, что он включен, и именно он пытается запросить нужные ресурсы.Фиктивный сервер
   В локальной сети намного проще производить атаку через подставные серверы или сервисы. Например, одна из знаменитых атак через некорректные ARP-записи может быть воспроизведена именно в локальной сети.
   Когда вы обращаетесь к какому-либо компьютеру по IP-адресу, сначала определяется его MAC-адрес, а потом уже на него отсылается сообщение. Как определить MAC-адрес, когда нам неизвестно, какой сетевой интерфейс установлен, а мы знаем только IP? Для этого используется протокол ARP (Address Resolution Protocol, протокол разрешения адресов), который рассылает широковещательный запрос всем компьютерам сети и выясняет, где находится экземпляр с указанным IP-адресом. В этом пакете заполнен только IP-адрес, а вместо искомого MAC-адреса указано значение FFFFFFFFFFFFh. Если в сети есть компьютер с запрошенным IP, то в ответном пакете будет указан MAC-адрес. Работа ARP-протокола происходит незаметно для пользователя. В противном случае ответ может прислать маршрутизатор, который сообщит свой MAC-адрес. Тогда компьютер будет обмениваться данными с ним, а тот уже в свою очередь будет пересылать пакеты дальше в сеть или другому маршрутизатору, пока они не достигнут получателя.
   А что если ответит не тот компьютер, а другой, с иным IP-адресом? Ведь в локальной сети передача осуществляется по MAC-адресу, поэтому пакет получит тот компьютер, который откликнется, независимо от его IP. Получается, что задача хакера вычислить ARP-запрос и ответить на него вместо реального адресата. Таким образом можно перехватить соединение.
   Допустим, что компьютер запросил соединение с сервером. Если мы ответим на него и сэмулируем запрос на ввод параметров для входа в сервер, то пароль будет перехвачен. Сложность такого метода в том, что вручную его реализовать практически невозможно. Для этого нужно писать соответствующую программу, а тут без знания программирования не обойтись.
   1.1.5.Троян
   Использование троянских программ — самый глупый и ненадежный в отношении администраторов сетей способ, но для простых пользователей подойдет, потому что им проще подбросить серверную часть программы. Хотя среди администраторов встречаются непрофессионалы, но на такие шутки уже мало кто попадается. Но кто сказал, что в сетисуществуют только они? Есть еще куча простых пользователей с большими привилегиями и доверчивой душой. Вот именно их и надо троянить.
   Троянская программа состоит из двух частей — клиент и сервер. Сервер нужно подбросить на компьютер жертвы и заставить его запустить файл. Чаще всего троянская программа прописывается в автозагрузку и стартует вместе с ОС и при этом незаметна в системе. После этого вы подключаетесь к серверной части с помощью клиента и выполняете заложенные в программу действия, например, перезагрузка компьютера, воровство паролей и т.д.
   Как забрасывать троянскую программу? Самый распространенный способ — почтовый ящик. Просто даете исполняемому файлу серверной части какое- нибудь привлекательное имя и отправляете сообщение жертве. В тексте письма должны быть мягкие, но заманчивые призывы запустить прикрепленный файл. Это то же самое, что и распространение вирусов, письма с которыми мы видим каждый день в своих ящиках. Если пользователь запустит серверную часть, то считайте, что вы стали царем на его компьютере. Теперь вам будет доступно все, что может для вас сделать боевой конь.
   Если троянская программа направлена на воровство паролей, то после заражения она может незаметно для пользователя выслать письмо с файлом паролей на определенный E-mail-адрес. Профи легко находят такие адреса (с помощью отладки приложения), но на этом все останавливается. Профессиональные хакеры не глупы и для троянских программ регистрируют почтовые адреса на бесплатных сервисах, при этом указывается ложная информация о владельце. Злоумышленник заводит почтовый ящик или проверяет его на предмет писем с паролями только через анонимный прокси-сервер, и узнать реальный IP-адрес человека становится очень сложно.
   Трояны получили большое распространение из-за того, что вычислить автора при соблюдении простых правил анонимности нелегко. При этом использование самих программ стало примитивным занятием.
   Опасность, которую таят в себе троянские программы, подтверждается и тем, что большинство антивирусных программ стали сканировать не только на наличие вирусов, нои троянов. Например, антивирусные программы идентифицируют Back Orifice, как вирус Win32.BO.
   1.1.6. Denial of Service
   Самая глупая атака, которую могли придумать хакеры, — это отказ от обслуживания (DoS). Заключается она в том, чтобы заставить сервер не отвечать на запросы. Как это можно сделать? Очень часто такого результата добиваются с помощью зацикливания работы. Например, если сервер не проверяет корректность входящих пакетов, то хакер может сделать такой запрос, который будет обрабатываться вечно, а на работу с остальными соединениями не хватит процессорного времени, тогда клиенты получат отказ от обслуживания.
   Атака DoS может производиться двумя способами: через ошибку в программе или перегрузку канала/мощности атакуемой машины.
   Первый способ требует знания уязвимостей на сервере. Рассмотрим, как происходит отказ от обслуживания через переполнение буфера (чаще всего используемая ошибка). Допустим, что вы должны передать на сервер строку "HELLO". Для этого в серверной части выделяется память для хранения 5 символов. Структура программы может выглядеть примерно следующим образом:
   Код программы
   Буфер для хранения 5 символов
   Код программы
   Предположим, пользователь отправит не пять, а сто символов. Если при приеме информации программа не проверит размер блока, то при записи данных в буфер они выйдут за его пределы и запишутся поверх кода. Это значит, что программа будет испорчена и не сможет выполнять каких-либо действий, и, скорее всего, произойдет зависание. В результате сервер не будет отвечать на запросы клиента, т.е. совершится классическая атака Denial of Service через переполнение буфера.
   Таким образом, компьютер не взломали, информация осталась нетронутой, но сервер перестал быть доступным по сети. В локальной сети такую атаку вообще несложно произвести. Для этого достаточно свой IP-адрес поменять на адрес атакуемой машины, и произойдет конфликт. В лучшем случае недоступной станет только штурмуемая машина, а в худшем — обе машины не смогут работать.
   Для перегрузки ресурсов атакуемой машины вообще не надо ничего знать, потому что это война, в которой побеждает тот, кто сильнее. Ресурсы любого компьютера ограничены. Например, Web-сервер для связи с клиентами может организовывать только определенное количество виртуальных каналов. Если их создать больше, то сервер становится недоступным. Для совершения такой акции достаточно написать программу на любом языке программирования, бесконечно открывающую соединения. Рано или поздно предел будет превышен, и сервер не сможет работать с клиентами.
   Если нет программных ограничений на ресурсы, то сервер будет обрабатывать столько подключений, сколько сможет. В таком случае атака может производиться на канал связи или на сервер. Выбор цели зависит от того, что слабее. Например, если на канале в 100 Мбит стоит компьютер с процессором Pentium 100 МГц, то намного проще убить машину, чем перегрузить данными канал связи. Ну а если это достаточно мощный сервер, который может выполнять миллионы запросов в секунду, но находится на канале в 64 Кбит, то легче загрузить канал.
   Как происходит загрузка канала? Допустим, что вы находитесь в чате, и кто- то вам нагрубил. Вы узнаете его IP-адрес и выясняете, что обидчик работает на простом соединении Dial-up через модем в 56 Кбит/с. Даже если у вас такое же соединение, можно без проблем перегрузить канал обидчику. Для этого направляем на его IP-адрес бесконечное количество ping-запросов с большим размером пакета. Компьютер жертвы должен будет отвечать на них. Если пакетов много, то мощности канала хватит только на то, чтобы принимать и отвечать на эхо-запросы, и обидчик уже не сможет нормально работать в сети. Если у вас канал такой же, то и ваше соединение будет занято исключительно приемом-отсылкой больших пакетов. Таким образом, мы можем загрузить канал жертвы, но при условии, что характеристики нашего канала сопоставимы с атакуемым компьютером. Если у вас скорость соединения медленней, то удастся загрузить только часть канала, равную пропускной способности вашего соединения. Остальная часть останется свободной, и жертва сможет использовать ее. С другой стороны, связь будет заторможена, и хотя бы чего-то мы добьемся. Это того стоит? Если да, то можете приступать.
   В случае атаки на сервер и его процессор наш канал может быть намного слабее, главное — правильно определить слабое звено. Допустим, что сервер предоставляет услугу скачивания и хранения файлов. Чтобы перегрузить канал такого сервера, нужно запросить одновременное получение нескольких очень больших файлов. Скорость связи резко упадет, и сервер может даже перестать отвечать на запросы остальных клиентов, при этом загрузка процессора сервера может быть далека от максимальной. Если неправильно определить слабое звено (в данном случае это сеть) и нарастить мощность сервера, то производительность все равно не увеличится.
   Для загрузки процессора тоже не требуется слишком большой канал. Нужно только подобрать запрос, который будет выполняться очень долго. Допустим, что вы решили произвести атаку на сервер, позволяющий переводить на другой язык указанные страницы любого сайта. Находим Web-страницу с большим количеством текста (например, книгу или документацию RFC — Request for Comments, рабочее предложение) и посылаем множество запросов на ее перевод. Мало того, что объем большой, и для скачивания серверу нужно использовать свой канал, так еще и перевод — довольно трудоемкий процесс. Достаточно в течение 1 секунды отправить 100 запросов на перевод громадной книги, чтобы сервер перегрузился. А если используется блокировка многократного перевода одного и того же, то нужно подыскать несколько больших книг.
   Атака отказа от обслуживания отражается достаточно просто. Серверное программное обеспечение должно контролировать и ограничивать количество запросов с одного IP-адреса. Но это все теоретически, и такие проверки оградят только от начинающих хакеров. Опытному взломщику не составит труда подделать IP-адрес и засыпать сервер пакетами, в которых в качестве отправителя указан поддельный адрес.
   Для сервера еще хуже, если взлом идет по TCP/IP, потому что этот протокол требует установки соединения. Если хакер пошлет очень большое количество запросов на открытие соединения с разными IP-адресами, то сервер разошлет на эти адреса подтверждения и будет дожидаться дальнейших действий. Но т.к. реально с этих адресов не было запроса, то и остановка будет лишенной смысла. Таким образом, заполнив буфер очереди на входящие соединения, сервер становится недоступным до момента подключения несуществующих компьютеров (TimeOut для этой операции может быть до 5 секунд). За это время хакер может забросать буфер новыми запросами и продлить бессмысленное ожидание сервера.Distributed Denial of Service
   С помощью DoS достаточно сложно вывести из обслуживания такие серверы, какwww.microsoft.comилиwww.yahoo.com,потому что здесь достаточно широкие каналы и сверхмощные серверы. Получить такие же ресурсы просто невозможно. Но как показывает практика, хакеры находят выходы из любых ситуаций. Для получения такой мощности используются распределенные атаки DoS (Distributed Denial of Service).
   Мало кто из пользователей добровольно отдаст мощность своего компьютера для проведения распределенной атаки на крупные серверы. Чтобы решить эту проблему, хакеры пишут вирусы, которые без разрешения занимаются захватом. Так вирус Mydoom С искал в сети компьютеры, зараженные вирусами Mydoom версий А и В, и использовал их для атаки на серверы корпорации Microsoft. Благо этот вирус не смог захватить достаточного количества машин, и мощности не хватило для проведения полноценного налета. Администрация Microsoft утверждала, что серверы функционировали в штатном режиме, но некоторые все же смогли заметить замедление в работе и задержки в получении ответов на запросы.
   От распределенной атаки защититься очень сложно, потому что множество реально работающих компьютеров шлют свои запросы на один сервер. В этом случае трудно определить, что это идут ложные запросы с целью вывести систему из рабочего состояния.
   1.1.7.Взлом паролей
   Когда взломщик пытается проникнуть в систему, то он чаще всего использует один из следующих способов:
   ? если на атакуемом сервере уже есть аккаунт (пусть и гостевой), то можно попытаться поднять его права;
   ? получить учетную запись конкретного пользователя;
   ? добыть файл паролей и воспользоваться чужими учетными записями.
   Даже если взломщик повышает свои права в системе, он все равно стремится обрести доступ к файлу с паролями, потому что это позволит добраться до учетной записи root (для Unix-систем) и получить полные права на систему. Но пароли зашифрованы, и в лучшем случае можно будет увидеть hash- суммы, которые являются результатом необратимого шифрования пароля.
   Когда администратор заводит нового пользователя в системе, то его пароль чаще всего шифруется с помощью алгоритма MD5, т.е. не подлежит дешифровке. В результате получается hash-сумма, которая и сохраняется в файле паролей. Когда пользователь вводит пароль, то он также шифруется, и результат сравнивается с hash-суммой, хранящейся в файле. Если значения совпали, то пароль введен верно. О хранении паролей в Linux мы еще поговорим вразд. 4.3.
   Так как обратное преобразование невозможно, то, вроде бы, и подобрать пароль для hash-суммы нельзя. Но это только на первый взгляд. Для подбора существует много программ, например, John the Ripper (http://www.openwall.com/john/)или Password Pro (http://www.insidepro.com/).
   Почему эти утилиты так свободно лежат в Интернете, раз они позволяют злоумышленнику воровать пароли? Любая программа может иметь как положительные, так и отрицательные стороны. Что делать, если вы забыли пароль администратора, или администратор уволился и не сказал вам его? Переустанавливать систему? Это долго и может грозить потерей данных. Намного проще снять жесткий диск и подключить к другому компьютеру (или просто загрузиться с дискеты, умеющей читать вашу файловую систему), потом взять файл паролей и восстановить утерянную информацию.
   1.1.8.Итог
   Каждый взломщик в своем арсенале имеет множество методов взлома, количество которых зависит от опыта. Чем искушеннее хакер, тем больше вариантов он собирает и отрабатывает на сервере. Определив ОС и запущенные на сервере сервисы, взломщик начинает последовательно использовать известные ему приемы атаки.
   Конечно же, подбор паролей доступен всем хакерам, но к нему прибегают в последнюю очередь, потому что он может отнять слишком много времени и не принести результата. Даже перебор всех паролей окажется неработоспособным, если сервер настроем на выявление таких попыток, и администратор отреагирует на них нужным образом — добавит в настройки сетевого экрана запрет на подключение с IP-адреса, который использовал хакер для подбора. Все остальные действия злоумышленника станут бесполезными, пока он не сменит свой адрес.
   Этот обзор хакерских атак не претендует на полноту, но я постарался дать все необходимые начальные сведения. В то же время я воздержался от конкретных рецептов, потому что это может быть воспринято, как призыв к действию, а я не ставлю своей целью увеличить количество хакеров. Моя задача — показать, как хакер видит и использует компьютер. Это поможет вам больше узнать о своем помощнике и сделать собственную жизнь безопаснее.
   В основном мы рассматривали теорию. Для реализации на практике всего вышесказанного нужны специализированные программы, и для определенных задач их придется писать самостоятельно.
   Вы обязаны хорошо понимать теорию взлома для того, чтобы ведать, от чего защищаться. Не зная этого, вы не сможете построить полноценную оборону, позволяющую отразить даже простые атаки хакера.
   Для защиты собственного дома от мелких хулиганов достаточно хорошего замка и сигнализации, а против грабителей и убийц надо ставить решетки на окнах, железные двери и колючую проволоку на заборе.
   Интернет слишком большой, и в нем живут хакеры различной квалификации, использующие разные способы взлома. Вы должны располагать информацией о возможных нападениях. Сложно предугадать, каким именно методом воспользуется злоумышленник. Нужно быть готовым ко всему и уметь отразить атаку самостоятельно.
   1.2.Что такое Linux?
   Linux— это свободная операционная система, исходные коды которой открыты для всеобщего просмотра и даже внесения изменений.
   Основа ядра ОС была создана в 1991 году студентом Хельсинкского университета (University of Helsinki) по имени Линус Торвальдс (Linus Torvalds). Он написал костяк, функционально схожий с Unix-системами, и выложил его для всеобщего просмотра с просьбой помогать ему в улучшении и наращивании возможностей новой ОС. Откликнулось достаточно много людей, и работа закипела.
   Хакеры из различных стран присоединились к этому проекту на общественных началах и начали создавать самую скандальную ОС. А буза вокруг Linux возникает чуть ли не каждый день, потому что ОС получила большое распространение и является абсолютно бесплатной. Некоторые производители программного обеспечения считают этот проект перспективным, другие (например, Microsoft) — периодически превращают во врага.
   Официальная версия ядра ОС под номером 1.0 была выпущена в 1994 году, т.е. через три года после первых "слухов" о Linux. Такая скорость разработки была достигнута благодаря большому количеству профессионалов, которые согласились развивать интересную задумку Линуса.
   ОС Linux — это многопользовательская и многозадачная система, которая позволяет работать с компьютером сразу нескольким пользователям и выполнять одновременно разные задачи.
   Почему именно эта ОС получила такое признание, ведь были и есть другие открытые проекты, а по реализации даже лучше Linux? Я связываю эту популярность с тем, что Linux создавался хакерами и для хакеров. Очень приятно, когда ты работаешь в операционной системе, в которой есть частичка тебя. Любой пользователь может вносить в исходныйкод системы любые изменения и не бояться преследования со стороны закона.
   Изначально популярность среди администраторов росла благодаря тому, что эта ОС поддерживала основные стандарты Unix, к которым относятся POSIX, System V и BSD. При этом система была написана для дешевой (по сравнению с дорогостоящими серверами Sun и IBM) платформы x86 и обладала всеми необходимыми возможностями. Таким образом, многие фирмы смогли оптимизировать свои расходы на организацию инфраструктуры информационных технологий (ИТ) за счет перевода некоторых серверных задач на бесплатный продукт — Linux.
   Среди первых задач, которые стали доверять Linux, — организация Web-сервера, и с ней ОС справляется великолепно. Трудно точно оценить, какой процент пользователей сейчас использует Linux, но большинство статистических анализов показывает, что на Linux совместно с сервером Apache приходится большая часть.
   На данный момент в Linux можно сделать практически все. Для этой ОС написано уже множество продуктов, которые распространяются бесплатно и позволяют решать всевозможные задачи. Компьютеры с установленной Linux используют в различных областях науки, экономики и техники, в том числе и при создании специальных эффектов для кино.
   Не менее важным фактором популярности стала демократичность ОС. Вас не ограничивают в возможностях и не заставляют следовать определенным предпочтениям разработчика. В комплект поставки ОС включается по несколько программ одинакового назначения, например, несколько браузеров или офисных программ. В Windows такое невозможно. Мы, наверное, никогда не увидим в одном дистрибутиве браузеры Internet Explorer, Mozilla и Opera (самостоятельные коммерческие продукты). В Linux конкуренция действительно свободная, и никто не запрещает использовать сторонние разработки и не борется с этим.
   1.3.Открытый исходный код — это безопасно?
   Бытует мнение, что программы с открытым исходным кодом надежнее и безопаснее, чем коммерческие.
   Сторонники этого утверждения считают, что такую систему исследуют много людей разными способами и тем самым выявляют все возможные погрешности. ОС Windows XP показывает достаточно высокую надежность и безопасность, хотя является коммерческим продуктом. А самое главное, что ошибки исправляются своевременно, доступны для свободного скачивания и легки в установке.
   Да, искать ошибки на уровне кода совместно с тестированием готового продукта намного проще и эффективнее, но результат далек от идеала. Несмотря на массовое тестирование в Linux достаточно часто находят ляпсусы. А если посмотреть, какая армия пользователей обследовала последние версии Windows, то можно было бы подумать, что она станет безупречной. Тестирование — это одно, а применение в "боевых условиях" демонстрирует совершенно непредсказуемые результаты.
   Открытость в отношении Linux имеет одно преимущество — отличное соотношение цены и качества. Возможность бесплатно установить ОС позволяет сэкономить большие деньги. Но затраты появятся в плане поддержки, которая для Linux стоит достаточно дорого, поэтому со своевременными обновлениями могут возникнуть проблемы. К тому же администрирование Linux требует больших навыков и умений, чем Windows. Отсутствуют мастера, которые облегчат жизнь. Необходимо знать команды Linux и уметь ими пользоваться без подсказки. Именно поэтому эта ОС до сих пор не поселилась в наших домах.
   Почему же Linux так сложна? Ответ прост. Производительность и удобство — несовместимые вещи. В Windows все предельно ясно, но для выполнения какой-либо операции может понадобиться множество щелчков мыши и просмотр нескольких диалоговых окон, что отнимает драгоценное время. В Linux нужно запустить консоль и выполнить нужную директиву. Проблема только в том, что надо помнить множество команд.
   ОС Windows везде, где только можно, использует визуальное представление и графический интерфейс. В Linux же графические утилиты слишком просты и зачастую не обладают достаточными возможностями, но это поправимо, и сейчас появляется все больше оконных утилит, упрощающих процесс настройки. Пройдет какое-то время, и Linux станет тривиальной в применении и при этом сохранит всю мощь и скорость использования командной строки.
   Так как настройка Linux — достаточно сложная процедура, требующая высокой квалификации, очень часто именно из-за неправильно установленных параметров эта система попадает под огонь хакеров. Любая система (Windows, Linux или Mac OS X) с настройками по умолчанию далека от идеала. Часто безопасностью жертвуют для обеспечения производительности или удобства. В некоторых программах включаются сервисные функции, которые облегчают работу администратора (например, отладка в интерпретаторе PHP), но и упрощают взлом со стороны хакера. Именно поэтому безопасность системы напрямую зависит только от человека, который ее обслуживает.
   Наша задача не просто научиться работать с ОС Linux, а делать это эффективно, т.е. суметь настроить ее на максимальную производительность и безопасность. Именно такуюцель мы и поставим перед собой.
   И все же, безопасность Linux выше, чем Windows, и это не связано с открытостью или закрытостью исходного кода. В Linux многие вопросы решены лучше, чем в Windows, например, работас памятью, определенная область которой выделяется при запуске программы. Выйти за ее пределы невозможно (только в крайних случаях, для обмена данными с другими приложениями). А в Windows каждая программа может получить доступ к любому участку памяти, вплоть до системного. Это грозит тем, что программа по ошибке может изменить чужую область памяти и даже разрушить систему.
   Начиная с Windows 2000, подсистема работы с оперативной памятью улучшилась, но она все равно несовершенна. Например, ОС Linux после завершения программы сама может очистить память, потому что точно знает, где, сколько и под какие нужды было ее выделено. В Windows это реализовать сложнее, поэтому можно только надеяться на совершенствованиекода.
   1.4.Ядро
   Ядро — это сердце ОС, в котором реализовано управление физическими и программными ресурсами компьютера. Помимо этого оно позволяет получить доступ к различному железу. Например, ранние версии ядра обеспечивали работу только двух USB-устройств: клавиатура и мышь. Начиная с версии 2.4, встроена поддержка USB-видеокамер, принтеров и других устройств.
   Номер версии ядра Linux состоит из трех чисел:
   ? первое (старший номер) — указывает на значительные изменения в ядре;
   ? второе (младший номер) — характеризует появление небольших изменений. По нему можно определить, является ядро проверенным или предназначено для тестирования и нет уверенности, что оно не содержит ошибок. Если число четное, то ядро прошло тщательное тестирование. В противном случае установка данной версии не гарантирует стабильной работы;
   ? третье — номер очередного рабочего релиза (сборка). В некоторых случаях это число опускают. Например, мы в этой главе уже говорили о ветке 2.4, и в данном случае не указана именно сборка.
   Вы должны самостоятельно обновлять ядро или помогать в тестировании нестабильных версий. Новые версии ядра можно скачать по адресуwww.kernel.orgили с сайта производителя вашего дистрибутива.
   Обновление ядра позволяет не только получить новые возможности по работе с железом, повысить производительность системы, но и исправить некоторые ошибки, которыеесть всегда и везде. Самое главное, что обновление ядра в Linux не влечет за собой переконфигурирования всей ОС, как это происходит в некоторых других системах. Я видел компьютеры, которые были установлены еще несколько лет назад и не перенастраивались с тех пор, а только обновлялось ядро и программное обеспечение. Такое бывает редко, потому что, как правило, периодически необходимо обновлять железо, наращивая мощности, потому что запросы программ и пользователей растут не по дням, а по часам.
   1.5.Дистрибутивы
   На данный момент существует множество различных дистрибутивов Linux, но несмотря на это легко проглядывается схожесть между ними, т.к. большинство имеет общие корни.Например, многие дистрибутивы построены на основе Red Hat Linux. Компании-производители вносят некоторые коррективы в инсталляцию (чаще всего только графические), изменяют список включаемого программного обеспечения и продают под своей маркой. При этом ядро системы и устанавливаемые программы чаще всего поставляются абсолютно без изменений.
   Даже если установочные версии имеют разных производителей, в качестве графической оболочки почти везде используется KDE или/и GNOME, а при отсутствии в поставке их всегда можно установить. Таким образом, в не зависимости от основного дистрибутива у всех будет одинаковый графический интерфейс.
   В данной книге мы будем рассматривать один из клонов самого распространенного дистрибутива Red Hat (по некоторым данным составляет около 50 % рынка Linux). В качестве примера я выбрал ASPLinux, как самый популярный в России. Если вы будете пользоваться другим дистрибутивом, то особой разницы не заметите (только в графической части во время установки).
   Разнообразие дистрибутивов является самым слабым звеном ОС Linux. Когда вы начнете работать с ОС, то увидите, что большая часть операций не стандартизирована (можно расценивать как следствие открытости кода). Получается как в поговорке "Кто в лес, кто по дрова". Это серьезная проблема, которая усложняет восприятие.
   В этом смысле ОС Windows более унифицирована и проще для обучения. Хотя в последнее время и здесь наблюдается отступление от установленных канонов. Так внешний вид программ стал совершенно непредсказуем. Меню и панели в Office 2000/XP/2003 постоянно изменяются (только успевай привыкать к ним!). В Linux, несмотря на отсутствие стандартов, элементы интерфейса везде одинаковы.
   Дистрибутивы Linux являются условно бесплатными. Их также нужно приобретать в коробочном варианте, но их лицензионное соглашение намного мягче, чем у коммерческих ОС. Например, купив одну коробку с Linux, вы можете устанавливать ее на любое количество рабочих станций.
   Цена одной копии Linux намного ниже, чем Windows, и при этом в дистрибутив входит громадное количество офисных программ, интернет-утилит, графических редакторов и т.д. Таким образом, установив полную версию, ваш компьютер готов сразу решать большинство производственных и домашних задач.
   В ОС Windows графический редактор (Paint), текстовый процессор (WordPad) и другие программы слишком примитивны, и для нормальной работы нужно потратить тысячи долларов. Поэтому реальная стоимость рабочего места на базе ОС Windows намного выше цены дистрибутива Linux.
   При таком сравнении ОС Linux окажется победителем. Но у Windows бесплатная поддержка, а для получения полноценной помощи в Linux нужен доступ к сети Red Hat, который стоит достаточно дорого. Поэтому расходы на поддержку могут сравнять стоимости владения этими операционными системами. Именно поэтому я не буду вас убеждать, что Linux лучше, потому что бесплатная, это не совсем верно. Но мы увидим, что ОС Linux более гибкая, надежная и, зачастую, выигрывает по производительности. Именно эти качества являются наиболее существенными, и я покажу, что все они присущи Linux.
   Итак, давайте рассмотрим основные дистрибутивы, которые вы можете встретить на рынке. Помните, что Linux — это всего лишь ядро, а большинство программ, сервисов и графическая оболочка принадлежат сторонним разработчикам. Какой именно продукт будет включен в состав ОС, определяется производителем дистрибутива.
   Ваш выбор должен зависеть от того, что именно вы хотите получить от системы, но и это не является обязательным, потому что любой дистрибутив можно "нарастить" дополнительными пакетами программ.
   1.5.1. Red Hat Linux
   Данный дистрибутив считается классическим и является законодателем моды в развитии ОС, потому что именно в этой фирме работает основатель Linux — Линус Торвальдс. Для получения этого дистрибутива вы можете купить коробочный вариант или скачать версию бесплатно с сайтаwww.redhat.com.Помимо этого, Red Hat ведет разработку ОС Linux в двух направлениях: для серверных решений и для клиентских компьютеров. Второй вариант начал все больше обретать дружественный интерфейс и способен решить любые домашние задачи.
   Установка этого дистрибутива уже давно стала простой и удобной. В следующей главе мы будем рассматривать, как инсталлируется клон ОС Red Hat, и вы поймете, что это не так уж и сложно.
   Все дистрибутивы Linux всегда ругают за сложность установки ядра и программ, которые чаще всего поставляются в исходных кодах и требуют компиляции. Компания Red Hat упростила этот процесс с помощью разработки пакетов RPM (Redhat Package Manager).
   Многие почитатели Linux надеются, что благодаря Red Hat их любимая ОС станет доступной всем и сможет победить конкурентов.
   Если вы выбираете себе дистрибутив для сервера, то я настоятельно рекомендую обратить внимание на этого производителя или его клонов, потому что Red Hat заботится о безопасности системы и старается исправлять ошибки с максимально возможной скоростью.
   1.5.2. Slackware
   Мое знакомство с Linux начиналось именно с дистрибутива Slackware (www.slackware.com).Это один из самых старых и сложных дистрибутивов для домашних пользователей. До сих пор нет удобной программы установки, и большинство действий приходится делать в текстовом режиме. Конечно же, вы можете добавить к этому дистрибутиву KDE или GNOME (графические оболочки), а также другие пакеты, облегчающие работу, но установку проще не сделаешь.
   Если вы ни разу не работали с Linux, то я бы не рекомендовал начинать знакомство с этого дистрибутива. Лучше выбрать что-нибудь попроще.
   1.5.3. SuSE Linux
   Мне приходилось работать с разными программами от немецких производителей, но их юзабилити не просто хромало, такие программы — это безногие калеки с детства. Но разработка от SuSE (www.suse.de)опровергает мое мнение. Этот дистрибутив отличается симпатичным интерфейсом и отличной поддержкой оборудования, потому что содержит громадную базу драйверов.
   Честно сказать, я бы удивился, если бы кто-либо умудрился испортить KDE или GNOME, ведь внешний вид ОС зависит от этих оболочек. В данном случае фирма SuSE смогла не испортить эту красоту своими картинками и логотипами.
   Но нельзя сказать, что программисты SuSE вообще ничего не сделали. Они добавили в дистрибутив набор утилит под названием YaST, которые значительно упрощают администрирование. Простота — это хорошо, но максимальных преимуществ можно добиться только при прямом конфигурировании файлов.
   Я бы посоветовал SuSE только любителям и для использования на клиентских компьютерах.
   1.5.4. Debian
   Несмотря на то, что цель любого производителя — получение прибыли, существует множество дистрибутивов, которые были и остаются некоммерческими. Основным и самым крупным из них можно считать Debian (www.debian.org).Этот продукт создают профессионалы для себя, но пользоваться этим дистрибутивом может каждый.
   ОС Debian имеет больше всего отличий от классической Red Hat, и у вас могут возникнуть проблемы из-за разного расположения некоторых конфигурационных файлов. Но на этом проблемы не заканчиваются. Как и все некоммерческие проекты, этот дистрибутив сложнее других. Разработчики позиционируют Debian как надежную ОС, и это у них получается, а вот о простых пользователях они заботятся мало, поэтому домашние компьютеры этот дистрибутив завоюет не скоро.
   Существует еще множество дистрибутивов, и их возможности варьируются от больших и мощных систем, включающих все необходимое, до маленьких дистрибутивов, загружающихся с дискеты и работающих на очень старых компьютерах.
   Основная задача книги — создание безопасной и быстрой системы — усложняется из-за большого количества дистрибутивов. Описать особенности каждого из них в одной книге очень сложно, да и не имеет смысла, потому что способы реализации защиты могут отличаться от дистрибутива к дистрибутиву и даже от версии к версии ядра. Слишком динамично развивается Linux.
   На этом вводную часть закончим и перейдем непосредственно к установке ОС Linux, чтобы начать знакомиться с системой на практике и увидеть все своими глазами.
   Глава 2
   Установка и начальная настройка Linux
   Установка всегда была самой сложной процедурой у всех дистрибутивов Linux. Вспоминаются времена, когда нужно было последовательно загружаться с нескольких дискет, а потом следовать сложным инструкциям или самостоятельно набирать команды Linux, которые уже надо было знать.
   Еще одна непростая задача — разбиение дисков на разделы. Их нужно иметь как минимум два (основной и раздел подкачки). Проблема в том, что многие боятся манипулировать с дисками, особенно с теми, на которых уже есть информация. И это правильно, потому что были примеры, связанные со случайной потерей данных.
   Во время инсталляции любая ОС должна определить установленное оборудование и подготовить все необходимое для его нормальной работы. Еще семь лет назад перечень поддерживаемых устройств можно было просмотреть за несколько минут, т.к. многие производители игнорировали Linux, не писали необходимые драйверы и при этом не давали нужной информации. Сейчас чтение такого списка займет дни, потому что все крупные игроки компьютерного мира начали считаться с пингвином (животное, которое ассоциируют с Linux). Определение оборудования теперь происходит безошибочно и, чаще всего, не требует дополнительного вмешательства со стороны пользователя.
   В настоящее время вся инсталляция происходит практически автоматически и сравнима по сложности с установкой других ОС. Именно поэтому корпорация Microsoft начинает бояться Linux и ее продвижения в бездну домашних компьютеров. Теперь уже любой, даже начинающий пользователь справится с установкой. И все же мы бегло рассмотрим этот процесс и остановимся на наиболее интересных моментах.
   Если вы уже имеете опыт установки Linux, я все же рекомендую вам прочитать эту главу, потому что некоторые детали могут оказаться интересными и полезными. Основные принципы безопасности и производительности закладываются уже на этапе установки, и впоследствии мы будем только следовать им и расширять наши познания.
   2.1.Подготовка к установке
   Какой дистрибутив устанавливать? Я не могу ничего советовать, потому что выбор всегда остается за вами. Отдайте предпочтение тому, который удовлетворяет вашим потребностям и может решить поставленные задачи. Вразд. 1.5мы рассмотрели наиболее популярные на данный момент дистрибутивы и их основные отличия, что облегчит вам принятие правильного решения.
   Единственное замечание, которое я должен сделать, — устанавливайте самый свежий дистрибутив, включающий последнюю версию ядра и приложений. Мы говорили и будем еще не раз повторять, что во всех программах есть ошибки, просто в новой версии о них никто еще не знает?.Кроме того, надо помнить, что программные средства необходимо своевременно обновлять. Если воспользоваться старым дистрибутивом, то объем обновлений может оказаться слишком велик. Не лучше ли установить сразу все новое и максимально быстро запустить сервер в эксплуатацию.
   Мастера установок для разных дистрибутивов могут отличаться, но все они, как правило, имеют схожие окна и даже последовательность выполняемых действий зачастую одинакова.
   Итак, приступим к рассмотрению процесса установки. Первое, что нужно сделать, — это определить место, где будет располагаться ОС. Если у вас новый компьютер, жесткий диск не разбит на части, и вы будете использовать только Linux, то во время установки просто отведите под нее все доступное пространство.
   Если у вас уже установлена Windows, и вы хотите, чтобы на компьютере было сразу две ОС, то придется сделать несколько телодвижений. Для этого нужно пустое пространство на диске. Нет, это не свободное место на логическом дискеС:,а пустота на винчестере. В последних инсталляционных версиях есть возможность изменять размер диска прямо в программе установки. В противном случае придется воспользоваться программой Partition Magic (http://www.powerquest.com/partitionmagic).
   Запустите Partition Magic. Главное окно программы вы можете увидеть на рис. 2.1. Слева находится дерево, в котором отображаются все жесткие диски, установленные в системе. Вданном случае имеется только один диск, внутри которого создан основной разделС:,занимающий полное пространство. В правой части окна есть графическое представление соотношения занятого (отображается более темным цветом) и свободного пространства, в рамках которого и можно освобождать диск. [Картинка: img_1.png] 
   Рис. 2.1.Главное окно программы Partition Magic
   Наша задача уменьшить логический дискС:,чтобы на высвободившемся месте ставить Linux.
   Выделите диск С: в дереве или в графическом представлении, нажмите кнопкуResize partitions,и перед вами появится окно, в котором можно указать новый размер выбранного диска. Для Linux желательно освободить не менее 4 Гбайт, а лучше и больше. Если ваш диск был размером 20 Гбайт, то укажите в качестве нового значения 16, и у вас освободятся требуемые 4 Гбайта. Чтобы применить трансформацию, нужно нажать кнопкуExit.Программа запросит подтверждение на внесение изменений и может предупредить о необходимости перезагрузиться в DOS-режим. Соглашайтесь. Все дальнейшие действия произойдут автоматически, и в следующий раз Windows начнет работу с уже уменьшенным диском.
   2.2.Начало установки
   Итак, свободное место на диске у нас уже есть. Теперь можно приступить к запуску инсталлятора. Для этого вставьте диск в CD-ROM и перезагрузите компьютер. Если в BIOS (BasicInput/Output System, базовая система ввода/вывода) не поставлена загрузка с CD-ROM, то самое время сделать это, тогда при старте компьютера автоматически запустится процедура установки. Вначале на экране побегут строчки тестирования компьютера, установленных жестких дисков, CD-ROM,мыши, видеокарты, монитора и т.д. На первый взгляд весь текст, который вы будете видеть, весьма жуткий и отпугивающий. Но это только кажется. ОС Windows также тестирует систему, просто ничего не показывает пользователю. Если слишком страшно, то закройте глаза, через минуту все пройдет.
   Опросив оборудование, программа установки Linux перейдет в графический режим, и перед вами появится приятное окно выбора языка. Мы пока разговариваем на русском, поэтому укажем его и нажмем кнопкуДалее.
   На втором этапе нужно выбрать мышь (рис. 2.2). Программа установки не сильно доверяет своему исследованию внешних устройств, и правильно делает. У меня почти всегда определяется двухкнопочная мышь PS/2. Третью кнопку Linux даже не пытается искать. В принципе это нормальная ситуация, потому что в Linux почти везде используются две кнопки, но я всегда ставлю третью. [Картинка: img_2.png] 
   Рис. 2.2.Подтверждение правильности определения мыши
   Окно подтверждения мыши содержит два взаимосвязанных списка: производители и соответствующие ему известные типы устройства. Чтобы не забивать себе голову, остановитесь на производителеGeneric (общие настройки, которые будут работать с устройствами любого производителя), а в правом списке выберите строку с желаемым количеством кнопок и нужным портом. Подключение для мыши указано в скобках и на данный момент может быть трех типов:
   ? PS/2 — современный порт для подключения устройств ввода (клавиатура, мышь);
   ? USB — универсальный интерфейс, используется для различных устройств, встречается все чаще и чаще;
   ? Serial — в народе известен еще и как COM-порт, встречается в старых мышках. Сейчас такой антиквариат найти уже сложно.
   На следующем шаге вам предлагается выбрать один из трех вариантов установки:
   ? Быстрая — конфигурация определена производителем. Таким образом вы сократите количество вопросов, на которые надо ответить во время установки, но результат будет далек от оптимального или безопасного.
   ? Выборочная — позволяет самостоятельно указать желаемые компоненты. Наиболее предпочтительный вариант для серверов и компьютеров, которые будут подключены к сети.
   ? Обновление существующей версии — используется при уже установленной Linux. Это позволит потратить меньше времени на повторную настройку.
   Затем следует указать, где находятся файлы установки. Так как мы загрузились с инсталляционного диска, то, конечно же, нужно выбрать пунктCD-ROM.Современные версии Linux можно легко установить и с жесткого диска, и по сети.
   Следующий этап — выбор диска, куда нужно устанавливать ОС. Это отдельная песня с бубнами и флейтой, которая может вызвать затруднения, поэтому я постараюсь остановиться на этом шаге более подробно.
   2.3.Разбивка диска
   В ASPLinux предусмотрено три варианта использования дискового пространства для размещения ОС:
   1.Весь диск. В этом случае все существующие разделы будут уничтожены, а значит, вся информация будет потеряна. Этот вариант удобен, если вы устанавливаете единственную ОС на новый компьютер. Программа установки сама выберет, сколько места и для чего отвести.
   2.Свободное место. Если на компьютере уже есть установленная ОС, и вы освобождали пустое пространство с помощью Partition magic, то выбирайте этот пункт. Программа установки создаст диски для Linux, исходя из свободного пространства на жестком диске.
   3.Дополнительно. Дает возможность самостоятельно выбрать параметры создаваемых дисков. Этот вариант наиболее сложный, но позволяет добиться максимально эффективных и безопасных результатов.
   2.3.1.Именование дисков
   В Linux диски нумеруются не так, как мы привыкли в Windows. Здесь нет дискаА:,С:и т.д. Все диски имеют имена/dev/hdaX,где X — это номер диска. Поясню, в каком диапазоне должны быть номера. Для первого жесткого диска назначается цифра 1 (/dev/hda1),для второго — 2 и т.д. до 4, потому что всего в компьютере может быть установлено 4 жестких диска (хотя в современных серверах используются намного большие массивы). Затем идут логические диски:/dev/hda5,/dev/hda6и т.д.
   На первый взгляд это сложно, но давайте рассмотрим пример, и все встанет на свои места. Допустим, что у вас есть два жестких диска. Первый из них разбит на два раздела, назовем их А — основной и В — дополнительный. На втором диске у нас будет один большой раздел С. Теперь посмотрим, какие имена назначит этим дискам ОС Linux:
   А —/dev/hda1;
   С —/dev/hda2;
   В —/dev/hda5.
   Основной раздел первого диска получил номер 1. Цифра 2 присвоена основному разделу второго диска. Дополнительный раздел первого диска имеет номер 5. Если бы на втором диске были дополнительные разделы, то они получили номера, начиная с б. Как видите, значения 3 и 4 остались свободными, потому что у нас только два жестких диска.
   2.3.2.Файловые системы
   Теперь поговорим о файловых системах, с которыми работает Linux. Эта ОС поддерживает множество систем, в том числе и Windows-файловые системы FAT, FAT32 и NTFS, но при установке ОС Linux желательно выбрать родную систему Ext2, Ext3 или ReiserFS (это название часто сокращают до Reiser). Последняя является новинкой и наиболее предпочтительна, потому что включает журналирование, которое делает систему более устойчивой и позволяет быстро восстанавливать ее после сбоев.
   Рассмотрим, как работают файловые системы, чтобы вы смогли выбрать оптимальный вариант. В файловой системе Ext2 данные сначала кэшируются и только потом записываются на диск, за счет этого достигается высокая производительность. Но если возникнут проблемы с питанием или произойдет аварийный выход из системы, то компьютер может не успеть сохранить данные. При следующем входе ОС обнаружит нарушение целостности жесткого диска и запустится программа сканирования диска fsck (как scandisk в Windows), которая восстановит его работоспособность, но воссоздать утерянные данные уже не удастся. Сканирование занимает много времени, и это может сказаться на скорости возобновления работы сервера. Будьте готовы к тому, что следующая загрузка будет происходить дольше обычного.
   В файловой системе ReiserFS также выполняется запись с предварительным кэшированием, а после этого проверка целостности данных, и если все записано верно, то кэш очищается. В противном случае ОС при запуске быстро найдет проблемные места с помощью созданного журнала и с минимальными потерями времени восстановит работоспособность диска.
   У файловой системы ReiserFS есть еще одно преимущество. Данные на жесткий диск записываются блочно. Допустим, что блок занимает 1 Кбайт. Если, например, в FAT32 записать файл размером 0,1 Кбайт, то блок будет уже занят, но в нем останется 90 % пустого пространства, которое нельзя использовать, т.е. происходит утечка памяти на жестком диске.Таким образом, на нем будет храниться немного меньше информации, чем вы ожидали. Файловая система RaiserFS позволяет лучше заполнять блоки.
   Утечку наглядно можно увидеть, если в ОС Windows открытьСвойствафайла (рис. 2.3). Обратите внимание, что в окне есть два параметраSize (Размер) иSize on disk (Размер на диске). Величина файла 4,95 Кбайт, а на диске он занимает целых 8 Кбайт. Арифметика простая, понятно, что один кластер на диске равен 4 Кбайтам. Размер файла больше этого значения, поэтому ОС пришлось выделить два блока, и второй заполнен менее чем на 25%. Остальное дисковое пространство пропало и не может использоваться. [Картинка: img_3.png] 
   Рис. 2.3.Окно свойств файла
   Если на диск поместить 1000 файлов по 100 байт при размере кластера 4 Кбайта, то каждый из них запишется в свой блок. При этом на диске будет израсходовано 400 Кбайт вместо положенных 100. Потери пространства составят 75%.
   Файловая система ReiserFS позволяет записывать в один блок несколько файлов, если их размер менее 100 байт. Таким образом, на диске будет меньше дыр и утечки памяти.
   Файловая система Ext3 — новое поколение журналируемых систем и работает по аналогии с ReiserFS. На данный момент она является системой по умолчанию в большинстве современных дистрибутивов Linux. Трудно сравнить по производительности ReiserFS и Ext3, но с точки зрения надежности советую использовать вторую. Стоит согласиться с мнением разработчиков.
   2.3.3.Ручное создание разделов
   Если вы настраиваете сервер, а не домашний компьютер, то я настоятельно рекомендую создать разделы вручную. По умолчанию программа установки создаст только два раздела — основной и для файла подкачки (будет использоваться при нехватке оперативной памяти), это неэффективно и даже небезопасно. Итак, выбираем параметрДополнительно,чтобы самостоятельно создать разделы. Перед вами откроется окно, как на рис. 2.4. [Картинка: img_4.png] 
   Рис. 2.4.Окно управления разделами
   Вверху окна находится выпадающий список (Диск),где можно указать диск, на котором нужно создать раздел. В данном случае выбран диск/dev/hda.Чуть ниже расположена таблица созданных на этом диске разделов. Как видно из рис. 2.4, пока разделов нет и все пространство пустое.
   С уже существующими разделами можно делать следующие операции: изменять параметры, копировать, двигать и удалять. Для этого щелкните мышью на интересующем разделе и нажмите соответствующую кнопку внизу окна.
   Для создания диска нужно выделить строку пустого пространства и нажать кнопкуСоздать.Перед вами появится окно, как на рис. 2.5. [Картинка: img_5.png] 
   Рис. 2.5.Окно создания раздела
   В выпадающем спискеТип файловой системыможно выбрать один из предложенных видов. Некоторые из этих систем (Ext3, Ext2, Reiser) мы уже рассмотрели вразд. 2.3.2.Познакомимся с остальными:
   ? XFS — устаревшая система, поддерживающая диски до 2 Гбайт и максимальный размер файла в 64 Мбайта;
   ? Swap — используется только для разделов подкачки, о которых поговорим чуть ниже;
   ? RAID — в данной книге мы эту тему затрагивать не будем.
   Чуть ниже расположена полоска, с помощью которой можно указать размер будущего диска простым перетаскиванием ее мышью. Для любителей работать руками есть возможность задать размер явным образом в полеРазмер (вводится число в мегабайтах).
   В выпадающем спискеТочка монт.можно указать точку (папку), которая будет храниться в данном разделе.
   В табл. 2.1 перечислены разделы, которые можно создавать, и их назначение. В различных дистрибутивах некоторые из этих разделов могут отсутствовать.

   Таблица 2.1.Разделы, которые можно создатьРазделОписание/Основной раздел. Если в Windows при указании пути к файлу сначала указывается имя диска, а потом папки внутри него, то здесь началом является слэш/binОсновные исполняемые файлы системы/bootФайлы, необходимые для загрузки системы/devПредставления для подключенных устройств/etcКонфигурационные системные файлы/homeПользовательские папки и файлы/libБиблиотеки ядра ОС/optДополнительные программные пакеты/procДля монтирования виртуальной файловой системы/sbinИсполняемые файлы главного пользователя (root)/tmpВременные файлы/usrСистемные файлы/varЖурналы, буферные или заблокированные файлыSwapРаздел подкачки
   Обратите внимание, что все имена разделов, кроме первого и последнего, начинаются со слэша. Это неслучайно, потому что первый и последний разделы являются обязательными, а все остальные представлены как вложенные в основной раздел папки.
   Swap— это всегда отдельный раздел со своей файловой системой и не может быть представлен в виде папки корневого диска. Размер этого раздела должен быть не меньше объема доступной оперативной памяти. Если у вас достаточно места на жестком диске, то я советую сделатьSwapв 3 раза больше, чем установленное ОЗУ, потому что память может быть расширена, а вот файл подкачки потом изменить будет проблематично.
   Для работы Linux нужно создать как минимум два раздела: основной (обозначается как /) и подкачки (Swap).Первый раздел может иметь любой тип файловой системы, кроме Swap, а второй как раз наоборот, должен быть типа Swap. В основном разделе будут располагаться все файлы, а второй — будет использоваться для расширения оперативной памяти. Если остальные разделы, перечисленные в табл. 2.1, не созданы, то они будут представлены в основном разделе в виде папок.
   На первый взгляд, все сложно, особенно если вы до этого работали только с ОС Windows. Но поверьте мне, что возможность создания многочисленных папок ОС в виде отдельныхразделов является действительно мощной возможностью. Два раздела достаточно, когда у вас только один жесткий диск и компьютер используется в качестве домашней системы. Если вы используете два винчестера, то лучше создать три раздела:
   ? /— на первом диске для всех системных файлов;
   ? Swap— на первом диске, будет использоваться при нехватке памяти;
   ? /home— на втором диске для хранения пользовательских файлов.
   Диски желательно подключить к разным контроллерам ("посадить" на различные шлейфы), что позволит системе работать с устройствами практически параллельно. Это может значительно повысить производительность ОС, потому что Linux сможет работать с системными и пользовательскими файлами одновременно.
   Если вы настраиваете сервер, то на отдельные жесткие диски можно вынести папки/homeи/var.Логические диски/разделы в этом случае не дадут желаемого результата.
   Какими должны быть разделы?Swapнужно задавать в зависимости от установленной памяти, и об этом мы уже говорили чуть раньше. Если разделы/varи/homeвынесены на отдельные диски, то для корневого каталога будет достаточно 4 Гбайт, но можно сделать и больше.
   На разделе/varтоже лучше не экономить и выделить ему 10 Гбайт. Здесь будут храниться файлы журналов, WWW- и FTP-файлы, которые быстро увеличиваются, и если они заполнят все доступное пространство, то система может выйти из строя или просто станет недоступной. Именно на это иногда рассчитывают хакеры, когда организуют атаку "Отказ от обслуживания" (DoS). К этому вопросу мы еще не раз будем возвращаться. Некоторые специалисты по безопасности рекомендуют располагать этот раздел на самом большом диске (чаще всего там же содержится и раздел/home),но это ударит по производительности. Когда журналы находятся на отдельном диске, то это позволяет выполнять запись в них параллельно с обслуживанием остальных разделов. Это значит, что пользователь работает со своими файлами с разделом/homeна одном жестком диске, а другой винчестер в это время сохраняет всю информацию об активности пользователя. Если обе папки будут на одном диске, то запись не сможетбыть параллельной.
   Ориентируйтесь на свои технические средства. При необходимости разделы/varи/homeдействительно можно разместить на одном, но самом большем жестком диске. Только вот под раздел/homeнужно отдавать все оставшееся пространство, потому что здесь пользователи будут хранить свои данные (достигают большого объема!), и если пожадничать, то скоро начнутся возмущения со стороны пользователей о нереальности сохранения на сервере результатов очередной игры. Если возможность есть, то выделите каждому из разделов максимально большой диск и забудете про проблемы.
   Для тестовой системы можно выбрать простейший вариант с двумя разделами (корневой и подкачки) и продолжить установку.
   Следующий шаг после создания всех разделов — их форматирование. Некоторые особо умные дистрибутивы выполняют эту операцию без дополнительных вопросов.
   2.4.Выбор пакетов для установки
   Следующий этап заключается в определении компонентов, которые надо устанавливать. Это достаточно интересный момент, и именно здесь обычно допускают первую и самую страшную ошибку — указывают все. Да, названия и назначение многих пакетов непонятны и незнакомы большей части пользователей, поэтому начинающие не могут четко определить список того, что им необходимо. Но это не значит, что нужно устанавливать все подряд.
   У меня на отладочной системе действительно стоит Linux в полной комплектации со всем, что только можно. На ней я тестирую новые программы и проверяю работоспособность отдельных модулей. Но в "боевых" системах не устанавливаю ничего лишнего.
   Любой дистрибутив Linux включает в себя невероятное множество программ, особенно серверных. Тут и Web-сервер, и FTP, и многое другое. Установив все, мы делаем свой компьютер "проходным двором", особенно если все это активизируется при старте системы. Загрузка компьютера замедлится и станет сравнима с запуском Windows XP на Pentium 100.
   В ОС будет открыто множество портов и заработают разнообразные сервисы, в которых мы пока еще даже не разбирались. А ведь нет идеальных программ. Везде существуют ошибки, которые регулярно обнаруживаются и исправляются. Если хотя бы в одном демоне (серверная программа, которая обрабатывает запросы клиента) найдется погрешность, то любой хакер сможет проникнуть в вашу систему и делать в ней все, что вздумается.
   Для рабочей системы я всегда устанавливаю абсолютно голую ОС, а затем добавляю только то, что нужно, особенно это касается серверных программ. Нарастить компоненты можно в любой момент, а вот отказаться от существующих порой бывает очень сложно.
   Итак, Linux предлагает нам выбрать один из следующих вариантов установки:
   ? Типовая— включает приложения, которые разработчик посчитал часто используемыми;
   ? Разработка— будут установлены основные пакеты и все необходимые компоненты для разработки приложений, компиляции ядра ОС Linux и т.д.;
   ? Офис— типовые пакеты плюс офисные приложения;
   ? Сервер— только ОС и демоны;
   ? Пользовательский— вы сами можете сформировать нужный список.
   Никогда не выбирайте серверную установку. В этом случае на компьютере отсутствуют клиентские приложения, но зато будут работать в фоновом режиме всевозможные программы-демоны. Это как раз самый опасный вариант. Если офисные программы не открывают портов, не работают с сетью (т.е. не могут нанести ущерб серверу извне), а также не загружаются в память при старте и не влияют на производительность, то серверные приложения тормозят систему, и каждый лишний демон — это удар по безопасности.
   Я рекомендую остановить свой выбор на пунктеРазработка,чтобы у нас были все необходимые возможности для написания программ и работы с документами, но при этом в компьютере не устанавливались серверные приложения. После определения типа инсталляции укажите пунктВыборочновнизу окна. Это позволит вам выбрать дополнительно требуемые пакеты.
   На следующем этапе мы увидим список всех компонентов, которые могут быть установлены. По умолчанию в списке нет выделенных серверных программ (и не надо). Но если заранее известно о необходимости какого-либо сервера, то можно его отметить, чтобы он автоматически установился. Допустим, вы знаете, что вам обязательно понадобится Web-сервер. Для этого чаще всего используют Apache. Найдите в дереве компонентов пунктWeb Server,раскройте его и поставьте галочку напротивapache (основные файлы сервера) иapacheconf (программа настройки). Если вы будете писать программы на языке PHP, то здесь же можно выбрать все необходимые компоненты для такой разработки.
   Не пожалейте времени и пройдитесь по всем имеющимся в списке пакетам. Выберите только самое необходимое, впоследствии в любой момент мы сможем расширить возможности. Помните, что уже на этапе установки мы закладываем фундамент будущей производительности и безопасности системы.
   Не устанавливайте ничего лишнего. Если вы не пользуетесь какой-либо программой, то, конечно же, не будете следить за ее обновлениями и не станете заниматься исправлениями ошибок. Для повышения своих привилегий злоумышленник сможет воспользоваться и такой программой. Таким образом, вы откроете нараспашку дверь хакеру.
   Когда вы выберете все необходимые пакеты и нажмете кнопкуДалее,начнется их непосредственное копирование на жесткий диск. Это займет достаточно много времени, поэтому можно приготовить чашечку кофе или даже успеть посмотреть какой-нибудь фильм.
   Пока идет установка, поговорим еще немного об этом процессе, чтобы к моменту настройки системы вы были во всеоружии. Допустим, что в вашей сети должны работать три сервера: Web-, FTP- и сервер новостей. Все эти функции может выполнять один компьютер, но безопасность в этом случае будет далека от идеала. Я всегда разношу каждую задачу на отдельные компьютеры и вам советую не экономить на железе и делать то же самое.
   Каждый запущенный демон — это потенциальная дыра. Как мы уже знаем, в них неизменно существуют погрешности, и не всегда администраторы узнают о них первыми. Допустим, что ошибка найдена в сервере Apache. В последнее время это происходит достаточно редко, потому что программа уже очень хорошо отлажена, но представим эту ситуацию. Ошибка может быть не в самом сервере Apache, а в обслуживаемом им Web-сайте или в интерпретаторе PHP/Perl. В любом случае хакер может воспользоваться этой брешью и с легкостью получит доступ к FTP-серверу и скачает все секретные данные. Если на данном компьютере будет работать только сервер, то доступ через FTP к конфиденциальным данным будет проблематичен. Максимум, что может сделать хакер, — дефейс (замена главной страницы) или уничтожение сайта. Но это восстановить проще, чем воссоздавать все данные с FTP- или сервера новостей.
   Чтобы злоумышленник не смог, взломав один компьютер, проникнуть на другой, вы должны задавать для каждого из них разные пароли. Некоторые администраторы ленятся запоминать много сложных комбинаций, поэтому придумывают только один пароль и потом устанавливают его везде, где только можно. О паролях мы еще поговорим вгл. 4,но уже сейчас вы должны знать, что для каждой системы должен быть свой код доступа.
   Но не только демоны являются потенциальной проблемой. В состав Linux многие программы включаются в исходных кодах и должны компилироваться в машинные перед выполнением. Программы, использующие уязвимости Linux-систем, также поставляются в исходниках. Для того чтобы ими воспользоваться, злоумышленник закачивает такой модуль на сервер и выполняет программу. Чтобы компиляция стала невозможной, я рекомендую не устанавливать библиотеки разработчика и компилятор gcc.
   В ОС Linux очень редко используются инсталляторы программ, поэтому все настройки производятся во время компиляции исходного кода. Если gcc будет недоступней, то у взломщика возникнут проблемы с выполнением зловредного кода.
   Конечно же, опытный хакер соберет программу из исходных кодов на своем компьютере и после этого закачает на взломанный сервер, но у начинающего злоумышленника отсутствие компилятора может вызвать затруднения. А ведь каждая проблема для взломщика — это победа специалиста по безопасности.
   Если вы только осваиваетесь в мире Linux, то я могу посоветовать установить linuxconf — это пакет программ, упрощающий администрирование и включенный в поставку. Во время изучения Linux вы увидите, что очень много настроек приходится делать в конфигурационных файлах вручную. Это не обязательно, т.к. сейчас существует большое количество программ, упрощающих настройку и имеющих визуальный интерфейс.
   Если вы можете обойтись без linuxconf, то лучше настраивать файлы вручную. Программы с визуальным интерфейсом нередко вносят в конфигурацию далеко небезопасные параметры или устанавливают высокие права доступа для сервисов. Поэтому после работы linuxconf не мешает проверить внесенные программой изменения, а для этого вы должны отлично знать структуру и содержание конфигурационных файлов.
   2.5.Завершение установки
   После завершения копирования файлов на диск нужно разобраться еще с несколькими настройками. Во-первых, система должна знать, как вы ее будете загружать. Если Windows без разговоров прописывает загрузку в MBR (Master Boot Record, основная загрузочная запись), то Linux позволяет выбрать любой другой диск или вообще его не прописывать. В этом случае читать Linux можно будет только с дискеты или некоторыми другими мудреными способами.
   В Linux есть множество загрузчиков, в моем дистрибутиве есть выбор между LILO (Linux Loader), GRUB (Grand Unified Bootloader) или ASP Loader (фирменный загрузчик ASP, который отличается от LILO только красотой). Я рекомендую выбрать LILO, хотя возможностей у него меньше, чем у GRUB, но их достаточно, и в настройке он проще. Устанавливайте его в MBR, если нет особой надобности загружать систему с дискеты.
   Загрузчик при старте системы позволит выбрать, какую именно операционную систему вы хотите использовать: Windows, если он установлен на компьютере, или Linux (или любое его ядро, если их несколько).
   Внизу окна (рис. 2.6) можно установить флажокСоздать загрузочную дискету.Я рекомендую обязательно сделать это, если вы выбрали тип установки не в MBR. Загрузочная дискета может спасти, если загрузчик испорчен на диске или вообще отсутствует. [Картинка: img_6.png] 
   Рис. 2.6.Установка загрузчика Linux
   Двигаемся дальше. При наличии сетевой карты в компьютере вы увидите окно для ее выбора. Если нужный драйвер в списке не найдется, то можно оставить значениеnone.Это не значит, что сетевая карта не заработает, просто будет использоваться универсальный драйвер. В дальнейшем я рекомендую установить корректные драйверы, чтобы заставить сетевую карту работать на все 100%.
   На следующем шаге задаются сетевые настройки. Если в вашей сети используется единственный DHCP-сервер, то можно оставить все по умолчанию. Если в вашей сети несколько серверов или есть необходимость расставить адреса вручную, то уберите галочку в пунктеНастроить с помощью DHCP.
   Если вы не знаете, как работает протокол TCP/IP, то в качестве адреса для примера можете указать 192.168.77.1. Перейдите в полеШлюз,и все остальные параметры будут заполнены автоматически. В полеМаскадолжно быть значение 255.255.255.0. Вразд. 3.6мы поговорим о настройке сети, и вы узнаете, как можно изменить параметры подключения. В полеИмя хостаукажите имя, которое вы хотите задать своему компьютеру.
   Последнее, что необходимо сделать, — это настроить вашу видеокарту для правильной работы в графическом режиме Windows. На рис. 2.7 показано окно мастера, позволяющего задать параметры видео. Ваша задача правильно выбрать видеокарту и характеристики экрана. Если вы ошибетесь, то сразу же познакомитесь с командной строкой Linux, но все же сможете решить проблему (вразд. 2.7мы рассмотрим этот вариант). [Картинка: img_7.png] 
   Рис. 2.7.Окно настройки видео
   Не забудьте нажать кнопкуТестировать,чтобы проверить установленные настройки. Если все прошло удачно, можно поставить галочку в полеИспользовать графический ввод,что позволит вам очутиться в приятном графическом мире Linux.
   2.6.Пароль
   Последнее, что нам нужно указать, — это пароль администратора системы (root). В Linux, как и в Windows XP Professional (не путать с Home Edition), нельзя входить без пароля, подобно Windows 9x.Вы обязательно должны указать имя пользователя и пароль, под которым будете работать, и в зависимости от ваших прав вам будет предоставляться доступ к определенным разделам и функциям ОС (рис. 2.8). [Картинка: img_8.png] 
   Рис. 2.8.Окно задания пароля
   Программа установки проверяет только длину пароля, и для администратора эта величина должна быть не менее 6 символов. Так как пользователь root имеет полные права насистему, то пароль должен быть как можно более сложным, чтобы его нельзя было быстро подобрать.
   Все специалисты по компьютерной безопасности в один голос просят пользователей не задавать простые пароли, но мало кто следует этим рекомендациям. Нельзя для этих целей использовать имена, читаемые слова или даты рождения. Такие пароли легко взламываются простым перебором по словарю, и это не отнимет много времени, если словарь хорошо составлен.
   При создании пароля желательно генерировать случайные шифры, в которых будут символы разного регистра (прописные и строчные буквы), а также цифры и различные допустимые символы (например, тире или подчеркивание). Длина пароля должна быть не менее 8 символов, а лучше более 12. Тогда для подбора хакеру потребуется намного больше времени.
   Когда нужно сгенерировать пароль, я запускаю какой-нибудь текстовый редактор и случайным образом набираю на клавиатуре любые символы в разном регистре. Как теперь использовать такую комбинацию? Лучше потратить пару дней на усвоение сложного пароля, чем лишиться важных данных.
   Если не хочется запоминать что-то сверхсложное, то можно применить метод попроще, но и надежность полученного шифра будет ниже. Рассмотрим очень интересный способгенерации случайных паролей. Допустим, что вы хотите использовать слово generation. А что, оно достаточно длинное, но простое и может быть легко взломано по словарю. Как усложнить пароль? Посмотрите на клавиатуру и набирайте вместо букв слова generation символы, находящиеся немного выше. Например, прямо над "g" находится "t", а над "е" — "3" и т.д. Таким образом получится пароль t3h34q589h. Такой пароль запоминается легко, и по словарю подобрать его сложнее.
   Вместо верхних можно взять буквы, находящиеся справа, и тогда пароль generation превратится в hrmrtsypm. Тоже нелегкая задача для хакера.
   А если еще набрать некоторые из этих букв в верхнем регистре, то пароль усложнится сразу в два раза. Например, вы можете установить в верхнем регистре третью и восьмую буквы и получить hrMrtsyPm.
   Вот таким простым способом можно соорудить легко запоминаемый, но сложный для подбора пароль.
   Помимо этого вам предлагается завести новую учетную запись (добавить пользователя), под которой вы будете в дальнейшем работать с системой. Конечно же, можно использовать и root, но это не рекомендуется. Даже администраторы должны входить в систему как простые пользователи (возможно, с небольшим завышением прав на доступ к необходимым объектам) и только при крайней надобности переключаться на учетную записьroot.
   На этом установка завершена и можно перезагружать компьютер, вытащив CD-диски из привода.
   2.7.Первый старт
   При старте компьютера пока все будет происходить по-старому: тестирование памяти, определение дисков, отображение информации о системе. И вот тут появится окно загрузчика Linux, который мы определили вразд. 2.5 (рис. 2.9). [Картинка: img_9.png] 
   Рис. 2.9.Окно выбора варианта загрузки
   В моем случае ОС устанавливалась на чистый компьютер, и возможны только два варианта: запустить Linux и загрузиться с дискеты. Впоследствии у вас может быть несколько ядер Linux, тогда список для выбора будет шире. Если у вас была установлена ОС Windows, то в этом окне можно будет увидеть еще и строку загрузки Windows. Таким образом, на одном компьютере могут вполне мирно существовать Windows и Linux. Хотя надо заметить, что Windows XP и старые загрузчики Linux не дружат. Видимо, XP не хотел терпеть конкурентов на одном компьютере и убивал LILO. Сейчас загрузчики Linux стали умнее и не дают себя в обиду.
   В некоторых дистрибутивах, в том числе и Red Hat, еще можно встретить командный вид приглашения для загрузки системы. После старта компьютера появляется строка для ввода необходимой ОС:
   LILO boot:
   Если при установке вы выбрали загрузку Linux по умолчанию, то достаточно нажать клавишу&lt;Enter&gt;,иначе необходимо набрать на клавиатуре заголовок загружаемой ОС (в данном случае это будет слово "linux") и после этого уже нажать&lt;Enter&gt;.Вместо набора имени загружаемой системы можно его выбрать, воспользовавшись стрелками на клавиатуре или клавишей&lt;Tab&gt;.
   Найдите загрузку Linux и облокотитесь в кресле в ожидании окна приглашения ввода пароля. На экране будет бежать белый текст на черном фоне с информацией о найденных устройствах, о версиях различных модулей и т. д. [Картинка: img_10.png] 
   Рис. 2.10.Процесс загрузки Linux
   После того как вы по центру экрана увидите надпись "Welcome to ASPLinux. Press '1' to enter interactive startup" или "Добро пожаловать в ASPLinux. Нажмите '1', чтобы перейти в интерактивный режим" (рис. 2.10), можно нажать кнопку&lt;1&gt;,тогда перед загрузкой очередного сервиса система будет просить подтверждение. Это очень удобная возможность, когда система нарушилась и какой-то сервис приводит к зависанию. Например, у меня очень часто после установки такое происходит с демоном sendmail (вгл. 8мы разберем проблему). Если это случилось, то ОС уже не может загрузиться. Для выхода из сложившейся ситуации просто перезапустите компьютер, войдите в интерактивный режим и на вопрос о загрузке sendmail ответьте "No".
   ОС Linux — многопользовательская. Это значит, что с ней могут работать поочередно или одновременно несколько человек. Система должна знать, с кем она сейчас работает, поэтому после загрузки ОС вам предложат представиться с помощью указания имени пользователя и пароля. Первый параметр позволяет идентифицировать вас, а второй —обезопасить от нежелательного использования вашего имени другим пользователем.
   Итак, идентификация пользователя в текстовом режиме выглядит, как строка- приглашение ввести имя:
   localhost login:
   Затем вы должны указать пароль, чтобы ОС смогла четко определить, что вы являетесь тем, за кого себя выдаете.
   Если вы предпочли графический вход в систему, то появится окно, как на рис. 2.11. Обращаю ваше внимание, что окна могут отличаться в различных дистрибутивах Linux. [Картинка: img_11.png] 
   Рис. 2.11.Окно ввода имени и пароля
   Прежде чем вводить имя, осмотритесь. В окне есть меню, состоящее из трех пунктов:
   ? Сеанс (Session)— позволяет выбрать графическую оболочку, которую вы хотите загрузить. Мы в основном будем работать с KDE или GNOME, как наиболее распространенными. Что выберете вы, зависит от личных предпочтений;
   ? Язык (Language)— по умолчанию используется английский язык, но вы можете изменить его, например, на русский. ОС Linux поддерживает достаточно обширный список национальных языков, ион постепенно расширяется;
   ? System (Система) — в этом меню находятся команды перезагрузки и выключения компьютера.
   В менюSession (Сеанс) есть еще один очень интересный пункт —Failsafe.Если ваша система настроена с ошибкой и графическая оболочка не может запуститься, то выберите этот пункт, и тогда до перехода в графический режим вы увидите окно терминала и в нем командную строку, с помощью которой можно исправить проблему.
   Определив нужные параметры, введите имя пользователя и пароль, которые вы указали во время установки ОС, и добро пожаловать в графический мир Linux. Но под какой учетной записью работать? Во время установки мы задали пароль системного администратора (root) и добавили пользователя. Я настоятельно рекомендую выбрать пользовательскую запись, потому что root обладает всеми правами и может творить все, что угодно. Эта власть нередко приводила к плачевным последствиям, когда администраторы во время тестирования каких-либо параметров по ошибке уничтожали важные данные.
   Работа под учетной записьюrootможет облегчить взлом компьютера через простые на первый взгляд приложения. Допустим, что вы путешествуете по Web-сайтам. Запущенный браузер автоматически имеет теже права. И если в нем найдется уязвимость, позволяющая получить доступ к жесткому диску, то злоумышленник сможет воспользоваться этой лазейкой и, например, стереть всю информацию.
   Если работать под пользовательской учетной записью, то уничтожить можно будет только те файлы, которые доступны этой записи. Системные файлы в таком случае в большей безопасности. При необходимости повышения прав вы всегда можете это сделать, зная пароль администратора. Для этого используется командаsu,а в качестве параметра (указывается через пробел после команды) передается имя пользователя, статус которого вы хотите обрести.
   Чтобы получить права администратора, наберите команду:
   su root
   или
   su -
   Вторая команда тоже позволяет приобрести праваroot,хотя вместо имени указано тире. В ответ на это система запросит пароль. Введите данные пользователя, права которого вы хотите получить, и после этого вы сможете выполнять команды, доступные этой учетной записи. Например, получив статус администратора, вы приобретете все права на систему.
   ОС Linux — многопользовательская система и поддерживает несколько терминалов. По умолчанию вы входите в первый терминал. Для того чтобы переключиться на другой, нужно нажать клавишу&lt;Alt&gt;и одну из клавиш&lt;F1&gt;–&lt;F6&gt;.В ответ на это перед вами появится чистый экран с приглашением ввести пароль, который может быть различным в каждом терминале.
   Использование терминалов — очень удобная возможность. В одном вы запускаете программу, которая требует много времени для выполнения, и между тем переключаетесь на другой терминал и продолжаете работу с компьютером. В любой момент можно вернуться на первый терминал и посмотреть на ход исполнения программы.
   Если вы перед запуском установили графический режим, то сразу после загрузки перед вами откроется окно, в котором система предложит использовать выбранную оболочку по умолчанию. Это значит, что при следующем старте, если не указано иного, будет запущена именно эта оболочка.
   Если вы выбрали текстовый режим, то в любой момент можете переключиться на графический, набрав командуstartx.В этом случае графическая оболочка будет загружена автоматически, без приглашения на ввод пароля, потому что вы уже идентифицировали себя в текстовой консоли.
   Текстовое приглашение на вход в систему может появиться и в случае ошибки конфигурации. В этом случае выполнение командыstartxни к чему не приведет, т.к. графическая оболочка не сможет загрузиться. Тогда придется произвести настройку графики заново. Большинство информации о конфигурации Linux находится в текстовых файлах и нередко приходится править их вручную. В данном случае также используются текстовые файлы, но ручное редактирование необязательно, потому что есть специальная и удобная утилита setup. Наберите в командной строке команду setup, и перед вами откроется окно, как на рис. 2.12. Выберите пунктX Configuration.Система, скорее всего, сама определит наличие видеокарты и необходимые драйверы, а вот с монитором могут быть проблемы. Чаще всего приходится самостоятельно указывать его тип и поддерживаемые видеорежимы. [Картинка: img_12.png] 
   Рис. 2.12.Главное окно утилиты Setup
   Кстати, о видеорежимах. В списке будут представлены все возможные значения, и вы можете указать любое количество. Я рекомендую остановиться только на том, который для вас является максимально удобным. После настройки обязательно протестируйте выбранный графический режим на предмет работоспособности. Если все пройдет удачно, то программа предложит использовать графический режим для входа в систему.
   Во время настройки можно использовать мышь, но если она отсутствует, то достаточно и клавиатуры. Для перемещения между кнопками используйте клавишу&lt;Tab&gt;,для выделения пунктов меню — пробел, а передвижение внутри списка осуществляется стрелками&lt;?&gt;и&lt;?&gt;.
   С настройкой видеокарты (и то на чипсете S3, собранной в Китае) у меня последний раз возникали проблемы года три назад еще на Red Hat 6.1. Современные дистрибутивы без проблем определяют железо, особенно если оно собрано именитым брендом.
   Надеюсь, что вам удалось войти в графический режим. Если во время загрузки произошла ошибка, завис компьютер или изображение на экране стало искаженным, графическую оболочку можно остановить нажатием клавиш&lt;Ctrl&gt;+&lt;Alt&gt;+&lt;Backspace&gt;.Таким образом, вы переключитесь в текстовый режим.
   Если загрузка графической оболочки прошла удачно, то самое время познакомиться с окном терминала, в котором можно выполнять команды как в текстовом режиме. Домашнему пользователю это не обязательно, потому что ему нужны игры и офисные программы. А для администрирования и тонкой настройки Linux терминал просто необходим.
   На рис. 2.13 показано окно графической оболочки KDE, а на рис. 2.14 — оболочка GNOME. [Картинка: img_13.png] 
   Рис. 2.13.Рабочий стол в графической оболочке KDE [Картинка: img_14.png] 
   Рис. 2.14.Рабочий стол в графической оболочке GNOME
   В обеих оболочках в нижней части Рабочего стола находится Панель задач.
   Здесь располагаются:
   ? кнопка вызова главного меню (самая левая кнопка) — аналог кнопки "Пуск" в Windows. В этом меню можно найти все установленные на компьютере программы и утилиты;
   ? кнопка быстрого вызова основных команд — на обоих рисунках выделена красным овалом, при нажатии осуществляется вызов окна терминала;
   ? пустое поле — здесь будут располагаться кнопки запущенных программ. Кнопки задач можно использовать для переключения между работающими приложениями.
   Откройте окно терминала, чтобы познакомиться с его внешним видом. В большинстве дистрибутивов по умолчанию это окно с черным фоном и текстом белого цвета. Сразу после запуска перед вами появится приглашение ввода команд, которое может выглядеть примерно следующим образом:
   [root@Flenov root]:
   Что это значит? Сначала идет имя пользователя, под которым вы вошли в систему (в данном случае это root). После знака @ следуют имя компьютера и пробел, за которым стоитимя текущей папки.
   2.8.Мы в системе
   Мы вошли в систему, и ОС запускает для нас уникальное окружение, которое определяется по имени пользователя. Среда включает пользовательские директории, настройки и командную оболочку.
   Пользовательские директории находятся в каталоге/homeи имеют название, совпадающее с именем пользователя. Например, для пользователя root есть подкаталог/home/root.В этой папке вы можете хранить свои файлы.
   Когда вы входите в систему, то текущей директорией становится ваша. Так для пользователя root таковой станет/home/root,и все команды будут выполняться в этом каталоге, пока мы не изменим его.
   В Linux существует несколько командных оболочек, и каждая из них обладает своими возможностями. Чаще всего пользователи применяют оболочку под названием bash (Bourne Again Shell). Мы будем рассматривать именно ее.
   Первые шаги мы уже сделали, теперь приступим к более глубокому знакомству с Linux. По мере изучения вы сможете настроить систему более тонко и сделаете ее максимально быстрой, эффективной и безопасной.
   Когда я начинал осваивать Linux и установил ее в первый раз, то потом долго не мог правильно выключить, потому что не знал, какая для этого используется команда. Я взялу знакомого книгу по этой ОС, но даже в ней описание процесса выхода было где-то в середине, и пока я нашел нужную команду, пришлось месяц обходиться без корректногозавершения работы ОС и выключать питание компьютера.
   Спешу поделиться с вами накопленным опытом. Для выхода из системы используется командаshutdown.После нее указывается, что именно нам нужно:-rдля перезагрузки или-hдля выключения компьютера. И в конце команды можно задать время, через которое должно начаться выполнение команды (в частности,now — сейчас).
   Например, для немедленной перезагрузки системы наберите команду:
   shutdown -r now
   Для немедленного выключения компьютера следует ввести:
   shutdown -h now
   Обязательно используйте эти команды. Если выключить питание с помощью кнопок на системном блоке, то можно потерять данные, которые были загружены в оперативную память, но не сохранены на жестком диске.
   Если вы работаете в текстовом режиме и просто хотите войти под другим именем пользователя, наберите командуexit.
   Чтобы выйти из системы в графическом режиме, нажмите кнопку вызова главного меню и выберите пунктВыйти из системы.Это заставит графическую оболочку выгрузится, затем снова появится окно-приглашение ввести пароль, где можно войти в систему под новым именем или перезагрузить компьютер.
   2.9.Подсказки
   Некоторые операционные системы славятся своей простотой и хорошими подсказками. Но я не устану повторять, что производительность, надежность и простота не всегдасовместимые вещи. ОС Linux содержит множество команд, и у каждой из них может быть большое количество параметров.
   Помнить их все невозможно, поэтому разработчики постарались и снабдили ОС обширной справкой.
   Если вы хотите получить информацию о какой-либо команде или программе, то попробуйте запустить ее с одним из ключей:-h,-helpили-?.Разные программы используют свой ключ, который чаще всего заставит вывести на экран короткую подсказку об использовании программы.
   Для получения более подробной информации нужно воспользоваться следующей конструкцией:
   manимя
   Имя — это название команды или программы, a man выводит на экран информацию об объекте. Например, чтобы увидеть описание командыshutdown,выполнитеman shutdown.
   Для выхода из программы помощи нужно набрать на клавиатуре&lt;-е&gt;.В ответ на это перед вами появится сообщение "Quit at end-of-file (press RETURN)". Нажмите клавишу&lt;Enter&gt;,затем перейдите в конец просматриваемого файла помощи, и программаmanзавершит работу.
   Более простой способ завершения программыman— нажать клавишу&lt;q&gt;.В этом случае выход произойдет мгновенно.
   Если вы устанавливаете лицензионный вариант ОС, то в коробке можно найти документацию по установке и руководство пользователя. Чаще всего эта информация поверхностная и позволяет сделать только минимальные настройки. Но некоторые дистрибутивы содержат очень подробную документацию или даже целые книги.
   2.10.Основы конфигурирования
   Прежде чем переходить к более глубокому рассмотрению вопросов, связанных с конфигурированием ОС Linux, мы должны определиться с правилами, которые действуют вне зависимости от ОС и сервиса. Если вы будете их придерживаться, то сможете построить действительно защищенную систему (сервер или даже сеть из компьютеров и серверов).
   2.10.1.Запрещено то, что не разрешено
   Когда вы настраиваете параметры доступа, то необходимо придерживаться принципа минимализма, который заключается в следующем:
   1. Необходимо запускать минимум возможного. Это касается не только сервисов в целом, но и их составляющих. Например, вам нужен Web-сервер и для этого чаще всего устанавливается Apache. Эта программа включает в себя очень много возможностей, среди которых поддержка интерпретируемых языков PHP и Perl, но, как правило, программисты сайтов используют только один из этих языков, поэтому нет смысла разрешать оба. Если сайт проектируется с помощью PHP, то следует удалить Perl, и наоборот. Ну а если ваш сайт использует сразу два языка сценариев, увольте своих программистов, потому что в разнородных системах намного сложнее построить безопасность.
   2. Следует разрешать минимум необходимого. Большинство администраторов не любят заниматься какими-либо настройками, поэтому открывают полный доступ на все, что только может пригодиться. Но слово "может" не совместимо с безопасностью. Возможность, которую вы откроете пользователю, на самом деле может ему не понадобиться, а вот злоумышленник благодаря лишней лазейке может натворить много бед. Например, на клиентских компьютерах может быть открыта какая-то папка для всеобщего доступа. Это мотивируется тем, что пользователям может потребоваться обмен данными. А если нет?
   При рассмотрении конфигурирования ОС и ее сервисов я буду часто напоминать об этом правиле, и при разборе примеров будем отталкиваться именно от полного запрета.
   2.10.2.Настройки по умолчанию
   Настройки по умолчанию предусмотрены только для обучения и чаще всего открывают абсолютно все возможности, чтобы вы могли оценить мощь программ. Это значит, что будет разрешено абсолютно все, а это уже нарушает второе рассмотренное правило.
   Если используется не так много команд и параметров, то лучше заняться конфигурацией программы с чистого листа. Если процедура достаточна сложная (ярким примером является Sendmail), то лучше всего отталкиваться от настроек по умолчанию, добавляя, изменяя или удаляя ключи. Даже не пытайтесь в этом случае настраивать систему с нуля. В процессе конфигурирования обязательно что-то забывается и тем самым повышается вероятность ошибки. Сложность конфигурационных файлов в том, что они имеют текстовый формат и все имена параметров нужно писать четко и полностью. Если ошибиться хотя бы в одной букве, параметр будет воспринят неверно, и появятся сбои в работе ОС или сервиса.
   Когда пишете имя параметра или путь в файловой системе, будьте внимательны не только к словам, но и к их написанию. ОС Linux чувствительна к регистру имен файлов и директорий. Эта особенность имеет значение и для некоторых конфигурационных файлов.
   2.10.3.Пароли по умолчанию
   Многие сервисы во время установки прописывают пароли по умолчанию. В ОС Linux эта проблема стоит особо остро, потому что программы инсталляции используют RPM-пакеты и чаще всего даже не предлагают их сменить. Я бы на месте разработчиков вообще запретил запуск сервисов с пустым или неизмененным паролем.
   Например, база данных MySQL после установки использует для администратора учетную запись без пароля и с именем root, которое может ввести в заблуждение, но вы должны знать, что этот логин никакого отношения к системной записи не имеет. Это внутренняя учетная запись базы данных, и пароли могут и должны быть разными. Сразу после установки MySQL необходимо сменить код доступа.
   Прежде чем сдавать систему в эксплуатацию, убедитесь, что изменены все пароли. Снова пример с MySQL. Администраторы редко используют его, а только устанавливают. Конфигурированием обычно занимаются программисты, которые настраивают базы под себя и почему-то любят использовать пароли по умолчанию. Я сам программист и при разработке баз данных тоже так делаю в надежде, что за паролями проследит администратор, а тот надеется на меня, и получается, что мы оба забываем.
   После того, как несколько раз система оказалась уязвимой, я разрабатываю программу под своей учетной записью и с измененным паролем. Лучше это сделать дважды, чем забыть выполнить совсем.
   Пароли по умолчанию используются не только в программах и ОС, но и в сетевых устройствах, таких как маршрутизаторы и управляемые коммутаторы. В эти устройства встроена система защиты и авторизации. Производители, не долго думая, чаще всего устанавливают имя Admin, а пароль оставляют пустым. Это большое упущение. Я бы на их месте для пароля по умолчанию использовал серийный номер устройства. В этом случае хакер не сможет его подобрать. Хотя и серийный номер не является абсолютной защитой, потому что если хакер увидит устройство своими глазами, то он легко сможет вычислить и пароль.
   В Интернете уже давно существуют списки паролей по умолчанию для различных устройств, поэтому не забывайте их менять после установки оборудования.
   2.10.4.Универсальные пароли
   Производители BIOS раньше устанавливали в свои чипы универсальные коды доступа, которые позволяли войти в систему, не зная основной пароль, который установил администратор. Например, в одной из версий BIOS компании AWARD использовался универсальный шифр AWARD_SW. Начиная с версии 4.51, такая "услуга" отсутствует.
   Если у вас есть возможность отключить использование универсального пароля, то сделайте это незамедлительно. В противном случае смените оборудование или программу, иначе нет смысла пытаться сделать вашу систему защищенной от вторжения.
   2.10.5.Безопасность против производительности
   Я уже говорил, что безопасность и производительность преследуют совершенно разные цели, которые чаще всего конфликтуют между собой. Настраивая сервер на максимальную безопасность, приходится включать такие сервисы, как журналирование, сетевые экраны, а они расходуют ресурсы процессора. И чем больше дополнительных служб включено, тем больше лишних затрат.
   Каждый ресурс может быть настроен по-разному. Например, в режиме журналирования можно записывать в журналы только основную информацию, что позволит уменьшить нагрузку на жесткий диск, но увеличит вероятность того, что какая-то атака пройдет незамеченной. А можно сделать так, что в журнал будут попадать абсолютно все сообщения. В этом случае повышается расход ресурсов, и у хакера появляется шанс удачно произвести атаку DoS.
   Во время конфигурирования сервера и его сервисов вы должны исходить из принципа необходимой достаточности. Следует принимать все меры, чтобы сервер или компьютерчувствовал себя в безопасности, но при этом работал как можно производительнее. Чтобы убедиться в нормальном балансе этих параметров, после окончания конфигурирования необходимо заставить сервер работать при максимально возможной загрузке (определяется планируемым количеством обрабатываемых запросов в минуту умноженноена 2). Если сервер справится с поставленной задачей и сможет обработать все запросы клиентов, и при этом еще останется запас в производительности процессора, то можно вводить машину в эксплуатацию. Иначе необходимо изменять конфигурацию или наращивать мощность компьютера.
   Глава 3
   Добро пожаловать в Linux
   В этой главе мы начнем знакомиться с самим Linux. Надеюсь, что вы уже установили систему, потому что все, что мы будем рассматривать, правильнее всего тут же проверять на практике. Только так материал будет лучше откладываться в памяти и усваиваться.
   Нам предстоит поближе познакомиться с файловой системой, основными конфигурационными файлами и командами, которые пригодятся в каждодневной работе. ОС Linux может работать в двух режимах — графическом и текстовом. Многие авторы почему-то ограничиваются рассмотрением только текстового режима в консоли. Это пугает тех пользователей, которые привыкли к Windows и интуитивно понятному интерфейсу. Мы будем разбирать одновременно оба режима. И все же, консоли будет уделяться достаточно много внимания, потому что зачастую с ее помощью можно быстрее, нежели через графические утилиты, решить какие-либо проблемы. Я постараюсь показать вам преимущество консоли перед курсором мыши. Дело в том, что серверы на предприятиях должны стоять в отдельной комнате и, возможно, даже без монитора. Управление происходит через удаленную консоль, и визуальные возможности Linux не используются. Тогда зачем загружать тяжелые графические библиотеки, файлы и другие ресурсы? Это же пустое расходование памяти!!! Не лучше ли ее освободить для более полезных вещей.
   Графический режим необходим для работы с пользовательскими утилитами. Он также может быть полезен на первоначальном этапе настройки сервера. А если учесть, что невсе компьютеры на базе Linux являются серверами, и домашние станции тоже могут работать на этой ОС, то удобный графический интерфейс необходим.
   Как видите, возможность работать в двух режимах — это преимущество Linux, а не недостаток. Если бы в Windows можно было выгрузить из памяти графическую оболочку и оставить только командную строку, то вы смогли бы сэкономить драгоценную память и повысить надежность этой ОС. Когда не работают графические библиотеки, то и проблемы с ними отсутствуют. Сколько раз мы видели синие экраны с ошибками в драйвере видеокарты? В консоли Linux этого произойти не может.
   Если вы настраиваете домашний компьютер (или маленькую сеть), то графическую оболочку можно оставить. Но если это промышленный сервер, требующий максимальной доступности, то я рекомендую оставить компьютер в текстовом режиме, чтобы обезопаситься от лишних сбоев и повысить производительность.
   3.1.Файловая система
   Прежде чем перейти к настройкам системы, нам нужно познакомиться поближе с файловой системой Linux. О структуре мы уже немного поговорили вразд. 2.3,когда разбивали жесткий диск. В табл. 2.1 были перечислены разделы, которые можно создать в Linux, а это не что иное, как основные папки.
   Теперь, наверное, нужно было бы перечислить команды, с помощью которых можно управлять директориями и файлами, а также просматривать и редактировать их. Но мы сделаем это чуть позже, а сейчас я хочу показать одну лишь программу Midnight Commander (МС). Это лучшее средство для решения всех описанных выше задач. Программа присутствует в большинстве дистрибутивов, в том числе и в Red Hat. Для ее запуска наберите в командной строкеmcи нажмите клавишу&lt;Enter&gt;.Постепенно мы будем знакомиться с этой утилитой, и вы полюбите ее за удобство и мощь, а сейчас рассмотрим только основные возможности.
   На рис. 3.1 изображено окно терминала, в котором запущена программа МС. Окно состоит из двух независимых панелей, в каждой из которых вы можете видеть файлы и папки текущей директории (имена папок начинаются с символа слэш). Для перемещения между панелями используется клавиша&lt;Tab&gt;. [Картинка: img_15.png] 
   Рис. 3.1.Окно терминала с запущенной программой Midnight Commander
   С правой стороны показана корневая папка. Это самый верхний уровень вашей файловой системы. Посмотрите на список папок в этой панели. Большинство названий нам знакомо по табл. 2.1. Каждая из этих папок может находиться в собственном разделе жесткого диска, если при установке вы его создали. Но даже в этом случае в файловой системе вы будете видеть все как одно целое.
   Вразд. 2.3.3мы говорили про корневой каталог, который в Linux обозначается как знак "/". Именно он является вершиной пирамиды в иерархии всех каталогов. Например, папки пользователя находятся в каталоге /home. Тогда /home/flenov будет определять путь к подкаталогу пользователя flenov. Чтобы попасть в эту директорию, нужно навести на нее курсор и нажать&lt;Enter&gt;.
   В списке папок и файлов самой первой всегда стоит папка с именем/...Реально такого каталога не существует. Это указатель на родительскую директорию, с помощью которой вы можете попасть на уровень выше. Например, вы находитесь в подкаталоге/home/flenov.Если войти в папку/..,то вы поднимитесь на предыдущий уровень и окажетесь в директории/home.
   Внизу окна МС (см. рис. 3.1) можно увидеть строку-приглашение для ввода команд. Эта та же строка, что мы видели в терминале, и позволяет выполнять те же директивы. Еще ниже расположена строка меню с подсказками о назначении клавиш&lt;F1&gt;—&lt;F10&gt;:
   ? 1 (Помощь) — вызов файла помощи по программе;
   ? 2 (Меню) — вызов меню основных команд МС;
   ? 3 (Просмотр) — просмотр выделенного файла;
   ? 4 (Правка) — редактирование выделенного файла во встроенном текстовом редакторе;
   ? 5 (Копия) — копирование выделенного файла или папки. Если выделить файл и нажать клавишу&lt;F5&gt;,то появится окно подтверждения копирования. По умолчанию операция выполняется в текущую директорию противоположной панели программы МС;
   ? 6 (Перемес) — переместить выделенные файлы или папки. По умолчанию файл будет перенесен в директорию, являющуюся текущей для противоположной панели программы МС;
   ? 7 (НвКтлог) — создать новый каталог в текущем;
   ? 8 (Удалить) — удалить выделенные файлы и папки;
   ? 9 (МенюМС) — вызвать меню программы МС, которое находится вверху окна;
   ? 10 (Выход) — выход из программы.
   Файлы и папки, имена которых начинаются с точки, являются конфигурационными. Будьте осторожны при их перемещении и редактировании. Эти файлы нуждаются в максимальной защите, но об этом мы поговорим позже в разных разделах книги.
   3.1.1.Основные команды
   Давайте рассмотрим основные команды файловой системы, которые мы будем использовать в книге, и заодно подробнее познакомимся с файловой системой Linux.pwd
   Эта команда выводит на экран полный путь к текущему каталогу. С ее помощью вы можете в любой момент узнать, где находитесь.ls
   Команда ls выводит список файлов и подкаталогов указанной директории. Если имя каталога (файла) отсутствует в параметрах команды, то отображается содержимое текущего каталога. По умолчанию все настроечные файлы (имена начинаются с точки) являются скрытыми. Чтобы их вывести, нужно указать ключ-а:
   ls -а
   Если мы хотим увидеть не только имена (сжатый формат), но и полную информацию о каталоге, нужно добавить ключ-l.В результате мы должны выполнить команду:
   ls -al
   Но такая команда отобразит файлы текущей директории, и не факт, что мы сейчас находимся, например, в каталоге/etc,который надо просмотреть. Чтобы увидеть именно его, после ключей (можно и до них) нужно указать требуемую папку:
   ls -al /etcПримечание
   Более подробную информацию о командеlsможно получить из справочной системы. Для этого выполните командуman ls.
   Рассмотрим результат вывода командыls -al:
   drwx------ 3 Flenov FlenovG 4096 Nov 26 16:10 .
   drwxr-xr-x 5 root   root    4096 Nov 26 16:21 ..
   -rw-r--r-- 1 Flenov FlenovG   24 Nov 26 16:10 .bash_logout
   -rw-r--r-- 1 Flenov FlenovG  191 Nov 26 16:10 .bash_profile
   -rw-r--r-- 1 Flenov FlenovG  124 Nov 26 16:10 .bashrc
   -rw-r--r-- 1 Flenov FlenovG 2247 Nov 26 16:10 .emacs
   -rw-r--r-- 1 Flenov FlenovG  118 Nov 26 16:10 .gtkrc
   drwxr-xr-x 4 Flenov FlenovG 4096 Nov 26 16:10 .kde
   По умолчанию список файлов выводится в несколько колонок. Разберем их на примере первой строки:
   ? drwx------права доступа. Их мы подробно рассмотрим в гл. 4. Сейчас вам только нужно знать, что если первая буква "d",то это директория;
   ? цифра 3 — указывает количество жестких ссылок;
   ? Flenov— имя пользователя, являющегося владельцем файла;
   ? FlenovG— группа, которой принадлежит файл;
   ? 4096— размер файла. Для директории это значение отсутствует, т.к. не устанавливается ее размер;
   ? дата и время последних изменений файла;
   ? имя файла.cat
   Команда позволяет вывести на экран содержимое указанного в качестве аргумента файла. Например, вы хотите просмотреть текстовый файл need.txt. Для этого нужно выполнить команду:
   cat need.txt
   Но это справедливо, если файл находится в текущей директории. А если нет? В этом случае можно указать полный путь:
   cat /home/root/need.txttac
   Эта команда обратная дляcat (даже название команды — это слово cat наоборот), т.е. выводит на экран файл в обратном порядке, начиная с последней строки до первой.cd
   Эта команда позволяет сменить текущий каталог. Для этого необходимо в качестве параметра задать нужную папку:
   cd /home/flenov
   Если вы находитесь в каталоге/homeи хотите внутри него перейти в подкаталогflenov,то достаточно набрать только имя папкиflenov:
   cd flenov
   Если нужно переместиться на уровень выше, например, из подкаталога/home/flenovв каталог/home,нужно выполнить команду:
   cd ..
   Как мы знаем, папка с именем из двух точек указывает на родительский каталог. Если перейти на нее, то мы попадем на предыдущий уровень.cp
   Команда копирования файла. С ее помощью можно выполнять несколько различных действий:
   1. Копирования содержимого файла в другой документ той же папки:
   cp /home/root/need.txt /home/root/need22.txt
   Здесь содержимое файла/home/root/need.txt (источник) будет скопировано в файл/home/root/need22.txt (назначение).
   2. Копирования файла в другой каталог:
   cp /home/root/need.txt /home/flenov/need.txt
   или
   cp /home/root/need.txt /home/flenov/need22.txt
   Обратите внимание, что в этом случае в папке назначения файл может быть как с новым, так и со старым именем.
   3. Копирование несколько файлов в новый каталог. Для этого нужно перечислить все файлы в источнике и последним параметром указать папку назначения:
   cp /home/root/need.txt /home/root./need22.txt /home/new/
   В этом примере файлы/home/root/need.txtи/home/root/need22.txtбудут скопированы в директорию/home/new.Можно копировать файлы и из разных каталогов в один:
   cp /home/root/need.txt /home/flenov/need22.txt /home/new/
   В этом примере файлы/home/root/need.txtи/home/flenov/need22.txtбудут скопированы в директорию/home/new.
   4. Копирование группы (всех) файлов каталога.
   А что если надо скопировать все файлы, начинающиеся на букву "n" из одной директории в другую? Неужели придется их все перечислять? Нет, достаточно указать маскуn*,где звездочка заменяет любые символы, начиная со второго:
   cp /home/root/n* /home/new/
   Если нужно скопировать все файлы, имена которых начинаются символами "ra" и заканчиваются буквой "t", то маска будет выглядеть какra*t.mkdir
   Создание новой директории. Например, если вы хотите создать подкаталогnewdirв текущей директории, то нужно выполнить команду:
   mkdir newdirrm
   Команда позволяет удалить файл или директорию (должна быть пустая):
   rm /home/flenov/need22.txt
   В качестве имен файлов можно использовать и маски, как в командеcp.Для удаления директории может понадобиться указание следующих ключей:
   ? -d— удалить директорию;
   ? -r— рекурсивно удалять содержимое директорий;
   ? -f— не запрашивать подтверждение удаляемых файлов. Будьте внимательны при использовании этого параметра, потому что файлы будут удаляться без каких-либо дополнительных вопросов. Вы должны быть уверены, что команда написана правильно.
   Пример удаления директории:
   rm -rf /home/flenov/dirdf
   Эта команда позволяет определить свободное место на жестком диске или разделе. Если устройство не указано, то на экран выводится информация о смонтированных файловых системах.
   Пример результата выполнения команды:
   Filesystem 1k-blocks   Used Available Use% Mounted on
   /dev/hda2  16002200 2275552  12913760  15% /
   none         127940       0    127940   0% /dev/shm
   Результирующая таблица состоит из следующих колонок:
   ? Filesystem— диск, файловая система которого смонтирована;
   ? 1k-blocks— количество логических блоков;
   ? Used— количество использованных блоков;
   ? Available— количество доступных блоков;
   ? Use%— процент использованного дискового пространства;
   ? Mounted on— монтировка файловой системы.mount
   Команда предназначена для монтирования файловых систем. Она достаточно сложна, и ее используют системные администраторы.
   Если вы работали с ОС Windows, то скорей всего привыкли к тому, что дискеты, CD-диски и другие съемные носители становятся доступными сразу же, как только вы поместили ихв устройство чтения. В Linux это не так, и многие не могут сжиться с этой особенностью. К таким пользователям отношусь и я, т.к. до сих пор не могу привыкнуть, что нужно выполнять дополнительные команды, хотя и прекрасно понимаю, что они необходимы.
   Итак, чтобы CD-ROM стал доступным, надо выполнить командуmount,указав в качестве параметра устройство/dev/cdrom:
   mount /dev/cdrom
   После этого содержимое CD можно посмотреть в директории/mnt/cdrom.Получается, что файлы и директории диска как бы сливаются с файловой системой.
   Почему именно в директорию/mnt/cdromподсоединяется CD-ROM? Секрет заключается в том, что для подключения CD-ROM нужно намного больше данных, чем дает одна командаmount dev/cdrom.Эти сведения хранятся в двух файлах, уже имеющихся в ОС и описывающих основные устройства и параметры по умолчанию — файлы fstab и mtab. Давайте по очереди разберем этифайлы.
   Для начала взглянем на fstab:
   # /etc/fstab: static file system information.
   #
   #&lt;file system&gt;&lt;mount point&gt;&lt;type&gt; &lt;options&gt;             &lt;dump&gt;&lt;pass&gt;
   /dev/hda2       /             ext3    defaults,errors=remount-ro 0 1
   /dev/hda1       none          swap    sw                         0 0
   proc            /proc         proc    defaults                   0 0
   none            /dev/shm      tmpfs   defaults                   0 0
   none            /dev/pts/     devpts  gid=5,mode=620             0 0
   /dev/cdrom      /mnt/cdrom    iso9660 noauto,owner,kudzu,ro      0 0
   /dev/fd0        /mnt/floppy   auto    noauto,owner,kudzu         0 0
   Файл содержит строки для основных дисков. Каждая запись состоит из 6 колонок. Обратите внимание на первую строку. Здесь описывается подключение дискаhda2.В моей файловой системе это основной диск, поэтому второй параметр — "/". Это значит, что диск будет монтирован как корневой. Третья колонка описывает файловую систему, в данном случае это Ext2. Параметрrwуказывает на то, что устройство доступно для чтения и записи.
   Предпоследняя строка в файле описывает устройство CD-ROM. Посмотрите внимательно на второй параметр/mnt/cdrom.Вот откуда берется путь к содержимому CD-диска. Четвертая колонка содержит опции монтирования, в которых можно описать параметры безопасности. В данном случае для CD-ROM здесь указано несколько опций:noauto, owner, kudzu, ro.Очень важным здесь является параметрro,который говорит о возможности только чтения CD-ROM. Вполне логично установить этот параметр для всех приводов и устройств, с помощью которых хакер сможет снять информацию с сервера.
   Файл mtab имеет примерно такое же содержимое:
   #&lt;file system&gt;&lt;mount point&gt;           &lt;type&gt; &lt;options&gt;      &lt;dump&gt;&lt;pass&gt;
   /dev/hda2       /                        ext3    rw,errors=remount-ro 0 0
   proc            /proc                    proc    rw                   0 0
   none            /dev/shm                 tmpfs   rw                   0 0
   none            /dev/pts                 devpts  rw,gid=5,mode=620    0 0
   none            /proc/sys/fs/binfmt_misc binfmt  misc rw              0 0
   /dev/cdrom      /mnt/cdrom               iso9660 ro,nosuid,nodev      0 0
   Если вы создали какие-то разделы на отдельных дисках, то сможете настраивать и их. Я вам рекомендовал выделить таким образом раздел/homeс пользовательскими директориями. Если вы так и сделали, то в файле может быть еще одна строка примерно следующего вида:
   /dev/hda3 /home ext3 rw,errors=remount-ro 0 0
   Посмотрим на четвертый параметр. В нем содержатся опции монтирования, которыми можно управлять для повышения безопасности системы. Они перечислены через запятую.В нашем примере этоrw, errors=remount-ro.В качестве опций монтирования дополнительно можно использовать:
   ? noexec— запрет выполнения файлов. Если вы уверены, что в разделе не должно быть исполняемых файлов, то можно использовать эту опцию. Например, в некоторых системах директория/homeдолжна хранить только документы. Чтобы хакер не смог записать в этот раздел свои программы, с помощью которых будет происходить взлом, добавьте этот параметр. Точнее сказать, программы поместить можно будет, а запустить — нет;
   ? nosuid— запрещает использование программ с битами SUID и SGID. В разделе/homeих быть не должно, поэтому можно явно запретить применение привилегированных программ. О SUID- и SGID-программах мы поговорим в разд. 4.5;
   ? nodev— запрещает использование файлов устройств;
   ? nosymfollow— запрещает использование мягких ссылок.
   Опцииnodevиnosymfollowне сильно влияют на безопасность, но могут пригодиться.
   Использование параметраnoexec— бесполезное занятие и абсолютно не защищает систему от профессионального хакера, потому что опытный взломщик сможет запустить программу, если для выполнения разрешен хотя бы один раздел. А таковым всегда является раздел с директорией/binи другие каталоги, которые содержат необходимые для работы программы.
   Допустим, что ваш сайт разрабатывается с использованием языка Perl. Если его интерпретатор доступен для выполнения, то взломщик сможет запускать сценарии программ Perl в любом разделе, в том числе и с установленным параметромnoexec.Если для запуска сценария использовать командную строку, то вы получите сообщение о нарушении прав доступа. Но программа выполнится, если написать следующую команду:
   perl file.pl
   Несмотря на то, чтоfile.plнаходится в разделе, в котором запрещены исполняемые файлы, ошибки не будет, потому что запускается разрешенная программаperl,которая в свою очередь читает файл (дозволенная операция) и выполняет его в своем адресном пространстве.
   Вспомните описание файла mtab, где для CD-ROM стоит запрет на использование SUID- и SGlD-программ. То же самое необходимо сделать, как минимум, с разделами/homeи/tmp.Тогда пользователи не смогут создавать в своих директориях привилегированные программы, что позволит предотвратить большое количество возможных атак.
   Итак, давайте попробуем смонтировать CD-ROM в другую директорию. Для этого сначала создадим ее:
   mkdir /mnt/cd
   Теперь выполним команду
   mount /dev/cdrom /mnt/cd
   Если на вашем компьютере установлено две ОС — Windows и Linux, то диск, скорее всего, содержит файловую систему FAT32 или NTFS. Следующие команды позволяют подключить FAT32 к Linux:
   mkdir /mnt/vfat
   mount -t vfat /dev/hda3 /mnt/vfat
   Первая команда создает директорию/mnt/vfat,куда будет подключаться диск с FAT32.
   Во второй команде происходит монтирование диска/dev/hda5.Будем считать, что как раз он и принадлежит Windows. Ключ-tпозволяет указать тип подключаемой файловой системы. Это обязательно. Для CD-ROM мы этого не делали только потому, что вся необходимая информация есть в файле/etc/fstab.Файловая система указана в параметреvfat.Это имя для FAT32, которое используется в Linux.
   Более подробно о работе команды можно узнать на страницах документации (man mount).umount
   Когда вы подключили к файловой системе CD-ROM, то это устройство блокируется, и диск нельзя вытащить, пока он не будет размонтирован. Для этого используется командаumount.
   Например, следующая команда позволяет размонтировать CD-ROM:
   umount /dev/cdromfdformat
   Перед использованием дискет их нужно отформатировать. В ОС Linux для этого используется командаfdformat.tar
   По ходу изложения данной книги мы иногда будем устанавливать различные программы, часть из них поставляется в виде архивов tar.gz. Чаще всего это программы, хранимые в исходных кодах. Для разархивирования такого файла нужно выполнить команду:
   tar xzvfимяфайла.tar.gz
   Как правило, после выполнения команды в текущей директории будет создан каталог с таким же именем, как у архива (только без расширения). В нем вы сможете найти все распакованные файлы.
   К работе с архивами мы вернемся вгл. 13,когда будем рассматривать резервирование данных. Сейчас же нам достаточно уметь распаковывать пакеты, чтобы устанавливать дополнительные программы и утилиты сторонних разработчиков.rpm
   В настоящее время большинство программ поставляются уже не в исходных кодах, а в виде RPM-пакетов. Их установка намного проще, т.к. программы в них уже скомпилированы. Если вы используете МС, то выберите RPM-пакет и нажмите клавишу&lt;Enter&gt;.Таким образом вы войдете в него как в директорию и увидите содержимое.
   Каждый пакет обязательно содержит исполняемый файл install. Запустите его для установки программы.
   Если вы не используете МС, то для установки нового пакета можно выполнить команду:
   rpm -iпакет
   Для обновления уже установленного пакета можно выполнить команду с параметром-U:
   rpm -Uпакет
   Для того чтобы видеть ход инсталляции, можно указать еще и ключ-v.Таким образом, команда установки будет выглядеть следующим образом:
   rpm -ivпакетwhich
   Иногда необходимо знать каталог, в котором расположена программа. Для этого используется командаwhichс именем программы в качестве параметра, которая проверит основные каталоги, содержащие исполняемые файлы. Например, чтобы определить, где находится программа просмотра содержимого каталоговls,выполните следующую команду:
   which ls
   В результате вы увидите путь/bin/ls.Если ваша ОС поддерживает псевдонимы (alias) команд, то можно будет увидеть и его. Таким образом, после выполнения команды на экране выведется:
   alias ls='ls -color=tty' /bin/ls
   3.1.2.Безопасность файлов
   Вгл. 4мы будем подробно говорить о правах доступа. Это основа обеспечения безопасности, но и только, и надеяться на это нельзя. Необходимы дополнительные инструменты сохранения целостности системы, или, по крайней мере, вы должны следить за изменениями основных объектов ОС — файлами. В них хранится информация, а именно она необходима взломщикам. Хакеры стремятся прочитать, изменить или даже уничтожить информацию, поэтому вы должны уметь ее контролировать.Дата изменения
   Самый простейший способ контроля — наблюдение за датой редактирования. Допустим, что взломщик проник в вашу систему в 10:30. Чтобы узнать, что было изменено злоумышленником, можно запустить поиск всех файлов, у которых дата корректировки больше этого времени. Вроде легко, но не очень эффективно, потому что дату можно изменить с помощью командыtouch.В общем виде команда выглядит следующим образом:
   touchпараметры ММДДччммГГ файл
   Прописными буквами показаны параметры даты, а строчными — время. Формат немного непривычный, но запомнить можно. Год указывать необязательно, в этом случае будет использоваться текущий.
   Рассмотрим пример. Допустим, что вы хотите установить на файл/etc/passwdдату изменения21января 11:40.Для этого выполняем следующую команду:
   touch 01211140 /etc/passwd
   Теперь воспользуйтесь командойls -l /etc/passwd,чтобы убедиться, что дата и время изменения установлены верно.
   С помощью командыtouchможно и создавать файлы, сразу же указывая необходимую дату.
   Несмотря на то, что дата корректировки легко изменяется, хакер может забыть или просто не успеть сделать это, а, возможно, ему просто не хватит прав.
   Итак, найти все файлы, дата изменения которых больше 21 января 11:40 2005 года, можно следующим образом:
   touch 0121114005 /tmp/tempfile
   find /etc \(-newer /tmp/tempfile \) -ls
   find /etc \(-cnewer /tmp/tempfile \) -ls
   find /etc \(-anewer /tmp/tempfile \) -ls
   В первой строке мы создаем файл во временной директории/tmpс необходимой датой изменения, по которой и будет происходить сравнение.
   Следующие три строки производят поиск файлов. Каждая из них имеет следующую структуру:
   findдиректория \( -сравнение файл \) -ls
   Рассмотрим по частям эту строку:
   ? find— программа поиска файлов;
   ? директория— каталог, в котором нужно искать. В нашем случае я указал системный/etc,в котором хранятся все настроечные файлы;
   ? параметр (-сравнение файл \)— состоит из файла для сопоставления и критерия поиска файлов, который может принимать различные значения:
    • -newer— дата изменения больше, чем у заданного файла в параметрефайл;
    • -cnewer— состояние изменено позже, чем у сопоставляемого файла в параметрефайл;
    • -anewer— дата последнего доступа превосходит, аналогичный параметр сравниваемого файла;
   ? параметр-ls— отображает на экране список файлов (как при выполнении командыls).Контрольные суммы
   На даты изменения можно надеяться, но необходимо дополнительное средство проверки. Наилучшим методом является подсчет контрольной суммы. Допустим, что вы хотите отслеживать изменения в директории/etc.Для этого выполните следующую команду:
   md5sum /etc/*
   Таким образом, подсчитывается контрольная сумма указанных в качестве параметра файлов. На экране вы получите результат выполнения команды примерно такого вида:
   783fd8fc5250c439914e88d490090ae1 /etc/DIR_COLORS
   e2eb98e82a51806fe310bffdd23ca851 /etc/Muttrc
   e1043de2310c8dd266eb0ce007ac9088 /etc/a2ps-site.cfg
   4543eebd0f473107e6e99ca3fc7b8d47 /etc/a2ps.cfg
   c09badb77749eecbeafd8cb21c562bd6 /etc/adjtime
   70aba16e0d529c3db01a20207fd66b1f /etc/aliases
   c3e3a40097daed5c27144f53f37de38e /etc./aliases.db
   3e5bb9f9e8616bd8a5a4d7247f4d858e /etc/anacrontab
   fe4aad090adcd03bf686103687d69f64 /etc/aspldr.conf
   ...
   Результат отображается в две колонки: первая содержит контрольную сумму, а вторая — имя файла. Контрольные суммы подсчитываются только для файлов. Для каталогов будет выведено сообщение об ошибке.
   В данном случае указаны все файлы каталог а/etc/*.Результат расчета выводится на экран. Но запоминать эти данные неудобно, поэтому логично будет записать их в файл, чтобы потом использовать его содержимое для анализа изменений. Следующая команда сохраняет результат в файле/home/flenov/md:
   md5sum /etc/*&gt;&gt; /home/flenov/md
   Чтобы сравнить текущее состояние файлов директории/etcс содержимым файла/home/flenov/md,необходимо выполнить команду:
   md5sum -с /home/flenov/md
   На экране появится список всех файлов, и напротив каждого должна быть надпись "Success" (Успех). Это означает, что изменений не было. Давайте модифицируем какой-нибудь файл, выполнив, например, следующую команду:
   groupadd test
   Пока не будем вдаваться в подробности команды, сейчас достаточно знать, что она изменяет файл/etc/group.Снова выполняем команду проверки контрольных сумм файлов:
   md5sum -с /home/flenov/md
   Теперь напротив файла/etc/groupбудет сообщение об ошибке, т.е. контрольная сумма изменилась. Таким образом, даже если дата корректировки файла осталась прежней, по контрольной сумме легко определить наличие вмешательства.Что контролировать
   Некоторые администраторы следят только за файлами настройки. Это большая ошибка, потому что атакой хакеров может быть не только конфигурация, но и исполняемые файлы. То, что Linux является продуктом с открытым кодом, имеет свои преимущества и недостатки.
   Порок в том, что профессиональные хакеры знают программирование. Им не составляет труда взять исходный код какой-либо утилиты и изменить его на свое усмотрение, добавив необходимые функции. Таким образом, очень часто в системе открыты потайные двери.
   Вы должны контролировать изменения как конфигурационных файлов, так и всех системных программ и библиотек. Я рекомендую следить за каталогами/etc,/bin,/sbinи/lib.Замечания по работе с файлами
   ОС Linux достаточно демократично относится к именам создаваемых файлов, позволяя использовать абсолютно любые символы, кроме знака "/", который является разделителем каталогов, и "0", который определяет конец имени файла. Все остальное можно применять.
   Самое неприятное — это возможность использовать невидимые символы, т.к. хакер может создать программу, у которой в имени только нечитаемые знаки, и пользователь не видит такого файла. Таким образом, взломщики скрывают в ОС свои творения.
   Рассмотрим пример с использованием перевода строки. Допустим, что хакер назвал свой файл hacker\nhosts.allow. В данном случае под "\n" подразумевается перевод каретки, а значит, имя состоит из двух строк:
   hacker
   hosts.allow
   Не все программы могут обработать такое имя правильно. Если ваш файловый менеджер работает неверно, то он отобразит только вторую строку — hosts.allow, и администратор не заподозрит ничего страшного в таком имени.
   Еще один способ спрятать файл — в качестве имени указать точку и пробел ". " или две точки и пробел ".. ". Файл с именем в виде точки всегда указывает на текущую директорию. Администратор, выполнив командуls,может не заметить, что существуют два файла с одинаковыми именами, а пробела все равно не видно.
   Пробелы можно вставлять в любые имена файлов, например, перед именем (" hosts.allow") или наоборот, добавить в конец, и невнимательный администратор ничего не заметит. Чтобы увидеть конечный пробел, можно при выводе добавлять к каждому имени символ "/". Для этого при вызове командыlsиспользуйте ключ-F.
   Еще один вариант спрятать файл — заменять одни символы на другие, схожие по начертанию. Например, посмотрим на имя файла hosts.a11ow. Ничего не замечаете подозрительного? При беглом взгляде обнаружить что-либо невозможно, но если приглядеться повнимательнее, то вы увидите, что вместо букв l (L) стоит цифра 1 (единица).
   Хакеры могут использовать этот прием. Еще можно подменять букву "b" на "d". И здесь трудно что-нибудь заподозрить, потому что если человек каждый день видит одно и то же, то, чаще всего, воспринимает желаемый текст за действительный.
   Внимание — главное оружие администраторов. Вы должны проявлять интерес к любой мелочи, и нельзя позволить обмануть наше зрение.
   3.1.3.Ссылки
   В вашей системе могут появиться документы для совместного использования. Рассмотрим эту ситуацию на примере. Допустим, что файл отчетности/home/reportдолжен быть доступен нескольким пользователям. Было бы логично, если копия этого файла находилась бы в домашних директориях этих пользователей. Но создавать несколько копий неудобно, потому что затруднится синхронизация. Да и сложно собрать в одно целое модификации из нескольких файлов, особенно если корректировался один итот же кусок. Кто будет оценивать, чьи изменения необходимо вносить в общий файл?
   Проблема решается с помощью ссылок, которые бывают жесткими (Hard link) и символьными (Symbolic link). Для постижения самой сути ссылок необходимо понимать, что такое файл и какое место ему отводится операционной системой. При создании файла на диске выделяется пространство для хранения данных. Его имя — это всего лишь ссылка из директории на участок диска, где физически находится файл. Получается, что можно создать несколько ссылок на одни и те же данные, и ОС Linux позволяет делать это.
   Когда мы выполняем командуls -l,то на экране появляется подробная информация о файлах в текущей директории. Напомню ее вид:
   -rw-r--r-- 1 Flenov FlenovG 118 Nov 26 16:10 1.txt
   Если к директиве добавить ключi (выполнить командуls -il),то к выводимой информации добавится еще и дескриптор файла:
   913021 -rw-r--r-- 1 Flenov FlenovG 118 Nov 26 16:10 l.txt
   Первое число и есть дескриптор, по которому определяется физическое расположение файла.
   Жесткая ссылка указывает непосредственно на данные и имеет такой же дескриптор. Таким образом, файл физически не удаляется из системы, пока не будут уничтожены все жесткие ссылки. По сути, каждое имя файла уже является жесткой ссылкой на данные.
   Для создания таких ссылок используется командаln,которая имеет следующий вид:
   lnимя_файла имя_ссылки
   В ответ на это программа создаст жесткую ссылку с именемимя_ссылки,которая будет указывать на те же данные, что и файлимя_файла.
   Чтобы на практике проверять все, что будет рассматриваться дальше, создайте в своей системе файл 1.txt. Для этого можно выполнить команду:
   cat&gt; 1.txt
   Нажмите клавишу&lt;Enter&gt;и введите несколько строк текста и нажмите клавиши&lt;Ctr&gt;+&lt;D&gt;.Теперь у вас есть необходимый файл для тестирования.
   Создадим для файла 1.txt жесткую ссылку. Для этого выполните следующую команду:
   ln 1.txt link.txt
   С помощью командыcat link.txtвыведите на экран содержимое файла link.txt и убедитесь, что оно идентично строкам в 1.txt. Теперь выполните командуls -il,чтобы просмотреть содержимое каталога. В списке файлов должны быть две строки:
   913021 -rw-r--r-- 2 root root 0 Feb 22 12:19 1.txt
   913021 -rw-r--r-- 2 root root 0 Feb 22 12:19 link.txt
   Обратите внимание, что первая колонка, в которой находится дескриптор для обоих файлов, содержит одинаковые значения. В третьей колонке стоит число 2, что говорит оналичии двух ссылок на данные.
   Теперь попробуем изменить содержимое любого из этих файлов. Для этого выполним следующие команды:
   ls&gt; link.txt
   cat 1.txt
   В первой строке мы сохраняем в файле link.txt результат работы командыls (список содержимого директории), а вторая — отображает документ 1.txt. Убедитесь, что содержимое обоих файлов изменилось и имеет одинаковые данные.
   Давайте попробуем удалить файл 1.txt и посмотреть на каталог и содержимое файла link.txt. Для этого выполните следующие команды:
   rm 1.txt
   ls -il
   cat link.txt
   Файл 1.txt будет удачно удален. А вот содержимое жесткой ссылки link.txt никуда не денется. То есть данные на диске не были уничтожены, а исчезло только имя 1.txt. Обратите внимание, что у файла link.txt в третьей колонке уменьшилось значение счетчика ссылок до единицы.
   Символьная ссылка указывает не на данные, а на имя файла. Это дает некоторые преимущества, но одновременно возникает большое количество проблем. Для создания символьной ссылки нужно использовать командуlnс ключом-s.Например:
   ln -s link.txt symbol.txt
   Посмотрим на результат с помощью командыls -il:
   913021 -rw-r--r-- 1 root root 519 Feb 22 12:19 link.txt
   913193 lrwxrwxrwx 1 root root   8 Feb 22 12:40 symbol.txt -&gt; link.txt
   Теперь дескрипторы файлов разные, но дляlink.txtпервый символ следующей колонки равен букве "l".Как раз она и указывает на то, что мы имеем дело с символьной ссылкой. Третий параметр равен единице, а последний — после знака "-&gt;"содержит имя файла, на который указывает ссылка.
   Попробуем удалить основной файл и после этого просмотреть содержимое ссылки symbol.txt:
   rm link.txt
   ls -il
   cat symbol.txt
   В первой строке мы удаляем файл link.txt. Вторая команда отображает список директорий. Убедитесь, что файла link.txt нет. Если вы используете Red Hat- дистрибутив, то командаls,скорей всего, имеет псевдоним, который, позволяет в зависимости от типа файла отображать его различными цветами. Если нет, то замените вторую команду наls --color=tty -il.
   Строка, содержащая информацию о ссылке symbol.txt, должна быть красного цвета, а текст — мигающий белый. Это говорит о том, что ссылка "битая", т.е. указывает на несуществующий файл. Команда catsymbol.txtпытается отобразить содержимое ссылки. Так как файла нет, мы увидим сообщение об ошибке.
   Самое интересное, что если попытаться записать какие-либо данные в файл symbol.txt, то файл link.txt будет автоматически создан. Это огромный недостаток, поэтому вы должны следить за символьными ссылками перед удалением файлов.
   Второй недостаток символьных ссылок кроется в правах доступа, но мы их будем рассматривать вгл. 4.
   Еще один минус таится в блокировках. Если открыть на редактирование файл, для которого создана символьная или жесткая ссылка, то он блокируется. Представим себе, что существует ссылка на файл/etc/passwdили/etc/shadow.При блокировке одного из них вход в систему станет невозможным.
   Чтобы взломщик не смог воспользоваться блокировками, его права на запись в системные каталоги должны быть ограничены. А пользователю в большинстве случаев надо давать разрешение писать только в свою домашнюю директорию и каталог/tmp.Иногда при разделении файлов может потребоваться работа с чужими каталогами, но все равно доступ ограничивается каталогом/home,где расположены пользовательские директории.
   Глядя на все недостатки ссылок, возникает вопрос — а нужно ли действительно использовать их? Я рекомендую это делать только в крайнем случае, когда все остальные способы решения проблемы еще хуже. Но если нет другого выхода, то делайте это аккуратно.
   3.2.Загрузка системы
   Некоторые администраторы не обращают внимания на то, как стартует система. Для них главное — только работа ОС. Да, прямой зависимости нет. Но во время загрузки ОС запускается множество программ, которые отнимают память, уменьшая тем самым производительность системы.
   Помимо этого, быстрая загрузка позволяет оперативно восстановить работу компьютера после сбоя. Все машины когда-либо приходится перезагружать, чтобы возобновитьполноценное функционирование. Это происходит из-за ошибок в программном обеспечении, перебоев с электропитанием и др. Чем скорее вы сможете это сделать, тем меньше будет простой.
   Во время загрузки должны производиться все необходимые настройки, чтобы сразу после старта не приходилось что-то конфигурировать вручную. Это может отнять слишком много времени, к тому же выполнять одни и те же действия каждый раз — очень скучно и неинтересно.
   3.2.1.Автозагрузка
   Для начала вернемся к утилите setup. Запустите ее в окне терминала, и перед вами откроется окно, как на рис. 2.12. Зайдите в разделSystem Services.Здесь перечислены все установленные сервисы, а напротив тех, что запускаются автоматически, в квадратных скобках будет стоять звездочка. Если вы устанавливали какой-либо демон, который вам необходим в работе, но использовать его будете изредка, то нет смысла запускать его автоматически и открывать ворота для хакера. Лучше убрать для него флаг автозапуска и стартовать только при необходимости, а сразу после работы останавливать сервис.
   Например, я иногда отлаживаю на своем сервере Web-сценарии, требующие MySQL. Держать базу данных постоянно загруженной — расточительство памяти и лишняя дверь в систему. Поэтому я запускаю MySQL вручную по мере необходимости, и по окончании отладки прекращаю его работу.
   Настоятельно рекомендую поступить так же и убрать все лишнее с глаз долой. Для этого стрелками выделите нужный демон и снимите галочку нажатием клавиши пробел. После того как вы настроили автозапуск, переключитесь клавишей&lt;Tab&gt;на пунктOK,чтобы сохранить изменения. Конечно, уже запущенные демоны не выгрузятся из памяти, но при следующем старте загружаться не будут. Перезагрузите компьютер и убедитесь в том, что система работает верно, и запускаются только необходимые демоны.
   Если вы работаете в KDE или GNOME, то можно воспользоваться графической утилитой для настройки автоматически запускаемых демонов. Для этого на рабочем столе щелкните по значкуControl Panel (Панель управления) и перед вами откроется окно, содержащее ссылки на основные программы конфигурирования системы. Нас будет интересовать ярлыкСлужбы.
   Эту же утилиту можно запустить и другим способом. Выберите главное меню ОС, а в нем пунктСистемаи, наконец,Службы (рис. 3.2). В дальнейшем, для обозначения программ, которые нужно запустить из главного меню, я буду просто писать:
   Основное меню ОС/Система/Службы. [Картинка: img_16.png] 
   Рис. 3.2.Запуск утилиты Службы
   Главное окно графической утилиты Службы представлено на рис. 3.3. В центре формы вы можете увидеть список, состоящий из двух колонок. В первом столбце располагаются флажки, а во втором — названия демонов. Если напротив сервиса стоит галочка, то служба запускается автоматически. Щелчком по флажку вы можете устанавливать и снимать галочку. [Картинка: img_17.png] 
   Рис. 3.3.Главное окно утилиты Службы
   Выделив какую-либо службу, вы можете ее запустить, остановить или перезапустить с помощью соответствующих кнопок на панели окна или через менюДействия.Любые изменения состояния автозагрузки необходимо сохранить. Для этого нажмите кнопкуСохранитьна панели или выберите менюФайл/Сохранить изменения.Внимание!
   Никогда не запускайте службы, которыми вы не пользуетесь. В автозапуске должны находиться только те программы, которые необходимы вам или пользователям сервера регулярно. Если какой-либо демон используется редко, то не следует его устанавливать в автозапуск. Такие сервисы надо запускать только по мере надобности и останавливать сразу после применения. Ненужные службы лучше удалить совсем, чтобы не было соблазна использовать.
   3.2.2. LILO
   Как мы уже знаем, программа LILO позволяет загружать Linux и другие ОС, установленные на вашем компьютере. Все настройки загрузки хранятся в файле/etc/lilo.conf.Программа LILO начинает работать после того, как компьютер протестировал систему, и до старта ОС. В старых версиях это выглядело, как простое текстовое приглашение:
   LILO
   или
   LILO boot:
   В ответ на это вы можете нажать клавишу&lt;Enter&gt;,чтобы загрузить ОС по умолчанию или клавишами&lt;?&gt;и&lt;?&gt;выбрать ту ОС, которая нужна в данный момент. В современных версиях загрузчик имеет более приятный графический вид.
   Пример конфигурационного файла можно увидеть в листинге 3.1.Листинг 3.1. Конфигурационный файл lilo.conf
   disk=/dev/hda
   bios=128

   boot=/dev/hda
   prompt
   timeout=300
   lba32
   default=linux-2.4.18

   image=/boot/vmlinuz-2.4.18-5asp
   initrd=/boot/initrd.2.4.18-5asp.img
   label=linux-2.4.18
   root=/dev/hda2
   read-only
   Каждая строка устанавливает какой-либо параметр загрузки. Таких опций много, и подробно с ними вы можете познакомиться в документации, поставляемой с ОС, а мы рассмотрим только основные. Большинству параметров присваивают значения. Это выглядит так:
   Параметр=3начение
   Слева от знака равенства находится имя параметра, а справа — значение, которое надо установить.
   Рассмотрим возможные параметры файла lilo.conf:
   ? boot=/dev/hda— задает устройство, с которого происходит загрузка;
   ? map=/boot/имя файла— карта загрузки. Если этот параметр опущен, то по умолчанию будет использоваться файл/boot/map;
   ? timeout=300— время ожидания в миллисекундах. Если за этот промежуток времени ничего не выбрано, то будет загружена ОС по умолчанию;
   ? lba32— позволяет использовать возможности lba32 (32-разрядная адресация блоков диска). Присутствие этого параметра может вызвать проблемы со старыми жесткими дисками безподдержки LBA (Logical Block Addressing, логическая адресация блоков);
   ? default=linux-2.4.18— определяет, что будет загружаться по умолчанию. В данном случае выбран образlinux-2.4.18;
   ? image=/boot/vmlinuz-2.4.18-5asp— указывает на ядро Linux. Чаще всего эта строка выглядит как/boot/vmlinuz;
   ? label=linux-2.4.18— метка или текст, который будет появляться в окне загрузчика;
   ? root=/dev/hda2— диск, на котором расположена корневая файловая система;
   ? read-only.
   На данный момент этой информации нам хватит. Большинство из нерассмотренных опций уже устарели и могут понадобиться только при использовании очень старых компьютеров (такие мало у кого сохранились). По своему опыту могу сказать, что перечисленных параметров будет достаточно. При компиляции ядра мы отредактируем lilo.conf и дадим возможность загрузки по выбору.
   Для корректировки файла достаточно открыть его в любом текстовом редакторе. Тут серьезных изменений не бывает, поэтому я использую редактор, встроенный в программу МС. Для этого запустите Midnight Commander. Скорей всего, текущим каталогом будет ваша папка, например/home/root.Нужно перейти в корневой каталог. Выберите самую первую папку/..и нажмите клавишу&lt;Enter&gt;.Теперь вы окажетесь в папке/home.Повторите эту операцию и переместитесь в корневой каталог.
   Теперь находим папку/etcи нажимаем клавишу&lt;Enter&gt;,чтобы войти в нее. Здесь ищем lilo.conf, выделяем его и нажимаем клавишу&lt;F4&gt;.Перед вами откроется простой текстовый редактор. Поменяйте нужные параметры. Нажмите клавишу&lt;Esc&gt;для выхода. Если данные были изменены, то программа выдаст запрос на сохранение. Соглашайтесь, если нужно принять исправления.
   Если вы никогда не редактировали файлы, то попробуйте сделать это сейчас. Для примера можно изменить время ожидания выбора пользователем способа загрузки Linux: с жесткого диска или дискеты. Конечно же, с винчестера я загружаюсь намного чаще, включаю компьютер и ухожу готовить кофе. В дальнейшем мы не будем останавливаться на этом процессе так подробно.
   В конфигурационных файлах Linux есть понятие комментария. Это текст, который программа просто игнорирует, и вы можете писать в нем любые пояснения или временно отключать какие-то параметры. Комментарий начинается с символа "#". Всем, что находится после этого символа, программа пренебрегает. Например:
   #Это комментарий
   boot=/dev/hda
   timeout=300 #Это комментарий, показывает время загрузки
   # lba32
   default=linux-2.4.18 #Это комментарий, ОС по умолчанию
   В этом примере первая строка начинается с символа "#", и она вся будет проигнорирована. В третьей строке комментарий стоит после указания параметра. Это значит, что сам параметр будет прочитан, а текст пояснения после него будет пропущен.
   В четвертой строке перед lba32 стоит знак "#", значит этот параметр будет проигнорирован и воспринят как комментарий.
   Пояснения очень удобны для того, чтобы временно отключать какие-либо опции. Вы можете просто удалить параметр и забыть, как он был написан, но если вы превратили его в комментарий, то для возврата достаточно убрать знак "#", и параметр заработает.
   С помощью утилиты LILO можно защитить ваш компьютер от несанкционированной загрузки ОС. Это необходимо, потому что при старте системы можно выполнить команду уже наэтапе загрузки. Если злоумышленник получил доступ к вашему компьютеру, то легко может войти в однопользовательском режиме с последующим взломом пароля root или реализовать команду.
   Если при загрузке LILO отображается в виде простого текстового приглашения (характерно для дистрибутивов Red Hat), то необходимо ввести имя загружаемой системы (linux), потом ключевое словоinit=и команду:
   Linux Boot: linux init=команда
   Чтобы хакер не смог запустить систему, необходимо защитить LILO с помощью пароля. Для этого в конфигурационном файле после ключевого словаimageдобавьте строку:
   password=пароль
   Вот пример задания пароля qwerty на загрузку:
   image=/boot/vmlinuz-2.4.18-5asp
   password=qwerty
   initrd=/boot/initrd.2.4.18-5asp.img
   label=linux-2.4.18
   root=/dev/hda2
   read-only
   Если на вашем компьютере установлены разные варианты системы, то необходимо для каждого из них указывать пароль. В следующем примере LILO позволяет загружать два ядра, и для обоих вводится свой пароль:
   image=/boot/vmlinuz-2.4.18-5asp
   password=qwerty
   initrd=/boot/initrd.2.4.18-5asp.img
   label=linux-2.4.18
   root=/dev/hda2
   read-only
   image=/boot/vmlinuz-2.6.2

   password=123456
   initrd=/boot/initrd.2.6.2.img
   label=linux-2.6.2
   root=/dev/hda2
   read-only
   О конфигурировании LILO с двумя ядрами мы поговорим вразд. 3.8.4.
   Если добавить параметрpasswordдо описанияimage,то указанный пароль будет действовать для всех ОС и ядер, загружаемых с помощью LILO.
   Но пароль запрещает только основную загрузку, а возможность выполнения команд при старте системы сохраняется. Чтобы сделать и это невозможным, добавьте в конфигурационный файл lilo.conf после объявления пароля строку С ключевым словомrestricted:
   image=/boot/vmlinuz-2.4.18-5asp
   password=qwerty
   restricted
   initrd=/boot/initrd.2.4.18-5asp.img
   label=linux-2.4.18
   root=/dev/hda2
   read-only
   Чтобы внесенные в файл изменения вступили в силу, необходимо запустить в командной строке директивуlilo.Таким образом, новые параметры будут записаны в загрузочную область и начнут действовать при следующем старте системы.
   3.2.3. init
   С помощьюLILOзапускается программа загрузки ОС, которая настраивает все необходимое оборудование, загружает драйверы и монтирует жесткие диски. По окончании этого процесса с винчестера запускается программа init, которая завершает загрузку.
   У программы init, как и у большинства других утилит Linux, есть свой конфигурационный файл, в котором можно производить определенные настройки (листинг 3.2). Этот файл называется inittab и расположен в папке/etc (полный путь/etc/inittab).Листинг 3.2. Файл настройки программы inittab
   #
   # inittab This file describes how the INIT process
   #         should set up
   #         the system in a certain run-level.
   #
   # Author: Miquel van Smoorenburg,
   #        &lt;miquels@drinkel.nl.mugnet.org&gt;
   #         Modified for RHS Linux by Marc Ewing and
   #         Donnie Barnes
   #

   # Default runlevel. The runlevels used by RHS are:
   #  0 - halt (Do NOT set initdefault to this)
   #  1 - Single user mode
   #  2 - Multiuser, without NFS (The same as 3, if you do not
   #      have networking)
   #  3 - Full multiuser mode
   #  4 - unused
   #  5 - X11
   #  6 - reboot (Do NOT set initdefault to this)
   # id:5:initdefault:

   # System initialization.
   si::sysinit:/etc/rc.d/rc.sysinit

   # What to do in single-user mode.
   ~~:S:wait:/sbin/sulogin
   10:0:wait:/etc/rc.d/rc 0
   11:1:rwait:/etc/rc.d/rc 1
   12:2:wait:/etc/rc.d/rc 2
   13:3:wait:/etc/rc.d/rc 3
   14:4:wait:/etc/rc.d/rc 4
   15:5:wait:/etc/rc.d/rc 5
   16:6:wait:/etc/rc.d/rc 6

   # Things to run in every runlevel.
   ud::once:/sbin/update

   # Trap CTRL-ALT-DELETE
   ca::ctrlaltdel:/sbin/shutdown -t3 -r now

   # When our UPS tells us power has failed,
   #  assume we have a few minutes
   # of power left. Schedule a shutdown for 2 minutes from now.
   # This does, of course, assume you have powerd installed
   # and your
   # UPS connected and working correctly.
   pf::powerfail:/sbin/shutdown -f -h +2 "Power Failure; System Shutting Down"

   # If power was restored before the shutdown kicked in,
   # cancel it.
   pr:12345:powerokwait:/sbin/shutdown -c "Power Restored; Shutdown Cancelled"

   # Run gettys in standard runlevels
   1:2345:respawn:/sbin/mingetty tty1
   2:2345:respawn:/sbin/mingetty tty2
   3:2345:respawn:/sbin/mingetty tty3
   4:2345:respawn:/sbin/mingetty tty4
   5:2345:respawn:/sbin/mingetty tty5
   6:2345:respawn:/sbin/mingetty tty6

   # Run xdm in runlevel 5
   # xdm is now a separate service
   x:5:respawn:/etc/X11/prefdm -nodaemon
   Файл начинается с комментария, в котором дана информация о модуле и авторе, затем — описание различных уровней, которые поддерживаются системой. В некоторых дистрибутивах их может быть от двух, a Red Hat Linux-подобные системы поддерживают целых семь. Рассмотрим каждый уровень:
   ? 0 — остановка ОС;
   ? 1 — текстовый однопользовательский режим, используется редко и только администраторами для выполнения критически важных изменений;
   ? 2 — текстовый многопользовательский, локальный режим (нет поддержки сети);
   ? 3 — текстовый многопользовательский, сетевой режим;
   ? 4 — не используется, но в дальнейшем может быть задействован;
   ? 5 — графический режим;
   ? 6 — перезагрузка системы.
   Пока что мы рассмотрели семь уровней. Есть еще уровень S, что соответствует однопользовательскому режиму, он применяется в файлах сценариев, но иногда присутствует и в inittab.
   Теперь познакомимся со структурой файла. Каждая строка в нем (не считая комментариев и пустых строк) выглядит следующим образом:
   идентификатор:уровни:флаги:действие
   Строка состоит на четырех аргументов, отделенных между собой двоеточием. Давайте рассмотрим каждый параметр в отдельности:
   ? идентификатор— уникальный номер строки, который имеет произвольное значение. Единственное ограничение — в файле не должно быть двух строк с одинаковыми идентификаторами;
   ? уровни— режимы, в которых будет выполняться команда. Например, если ей надлежит работать на втором и третьем уровнях, то здесь должно стоять число 23. Это просто цифры 2 и 3,которые не разделяются пробелами или какими-либо другими знаками. Если команду нужно выполнять на любом уровне, то этот параметр должен быть пустым;
   ? флаги— задает поведение команды, может принимать одно из следующих значений:
    • boot— выполняется только один раз при загрузке ОС. В этом случае параметруровнипросто игнорируется;
    • bootwait— равносильно указанию параметровbootиwaitодновременно, т.е. выполнение должно быть во время загрузки ОС, и при этом нужно дождаться завершения операции;
    • ctrlaltdel— нажата комбинация клавиш&lt;Ctrl&gt;+&lt;Alt&gt;+&lt;Del&gt;.Случайных или незапланированных перезагрузок быть не должно. Наличие трех клавиш — это недостаток, потому что любой хакер может подойти и нажать их ради шутки илив корыстных целях. Я рекомендую отключить эту возможность, установив в начале строки знак комментария "#";
    • initdefault— строка с этим параметром читается только при первом обращении к init и определяет уровень загрузки. Если в этой строке будет стоять число 5, то ОС будет сразу в графический режим. Если вам нужно загрузить ОС в текстовый, многопользовательский режим с поддержкой сети, то измените значение параметра на цифру 3 (см. описание уровней загрузки). Можно указать несколько чисел (я не рекомендую этого делать), в этом случае будет выбрано максимальное;
    • off— отключить выполнение команды, что равноценно превращению строки в комментарий или даже удалению. Но если этот процесс уже работает, то ему передается сигнал, требующий завершения программы;
    • once— выполнять команду только один раз;
    • powerfail— отключение электроэнергии. Ошибку можно увидеть только при наличии источника бесперебойного питания, подключенного к компьютеру через специальный интерфейс (чаще всего через СОМ-порт);
    • powerokwait— подача электроэнергии возобновилась;
    • powerwait— система перешла в режим ожидания восстановления питания. Предполагается, что к компьютеру подключен источник бесперебойного питания, который сообщил об ошибке(отсутствии питания);
    • respawn— если во время выполнения произойдет ошибка, то повторить команду. Это бывает необходимо для критически важных программ, которые должны быть всегда в запущенном состоянии;
    • sysinit— такие команды выполняются перед тем, как появится консоль (приглашение ввести пароль). При этом ОС дожидается окончания выполнения команды;
    • wait— ожидать завершения процесса, а значит, программа init не будет выполнять других действий, пока не закончится выполнение команды, указанной в этой строке. Например,если нужно проверить состояние диска, то необходимо заморозить дальнейшую загрузку до окончания проверки;
   ? Действие— команда, которая должна быть выполнена.
   Теперь рассмотрим некоторые строки из листинга 3.2, чтобы понять их смысл и научиться управлять ими для повышения эффективности системы.
   Самая первая строка после комментариев в нашем файле выглядит так:
   id:5:initdefault:
   Мы уже знаем, что параметрinitdefaultопределяет, как будет загружаться система. В данном случае файл init будет выполняться с 5 уровнем, т.е. в графическом режиме.
   Следующим интересным моментом являются строки:
   10:0:wait:/etc/rc.d/rc 0
   11:1:wait:/etc/rc.d/rc 1
   12:2:wait:/etc/rc.d/rc 2
   13:3:wait:/etc/rc.d/rc 3
   14:4:wait:/etc/rc.d/rc 4
   15:5:wait:/etc/rc.d/rc 5
   16:6:wait:/etc/rc.d/rc 6
   Как видите, здесь для каждого уровня своя строка, и при этом запускается один и тот же файл/etc/rc.d/rc,но после имени через пробел стоит число, соответствующее текущему уровню. Это параметр, который увидит программа/etc/rc.d/rc.
   Что это за программа? Основная ее задача — убить все текущие процессы и запустить другие, соответствующие новому режиму выполнения. Например, вы работали на 3 уровне (полный многопользовательский режим) и хотите перейти на 1 (однопользовательский). Как это происходит? Все программы многопользовательского режима завершаются, а потом активизируются только те процессы, которые соответствуют однопользовательскому режиму, и ничего лишнего в памяти не должно быть. Именно это и делает программа/etc/rc.d/rc.
   Перейдите в папку/etc/rc.d/и посмотрите на ее содержимое. Помимо программы, здесь есть каталоги с именамиrcX.d,гдеX — это число от 0 до 6, соответствующее уровню выполнения. В каждой папке есть файлы, имена которых начинаются с буквы "K" или "S". При выходе с уровня выполняются все файлы первого типа, они уничтожают все запущенные на нем процессы. А при входе на уровень выполняются файлы на букву "S", которые активизируют все необходимые процессы данного уровня.
   Таким образом, система может обезопасить себя тем, что на одном уровне будут работать только те программы, которые должны быть в однопользовательском режиме, и многопользовательское вторжение становится невозможным при правильном конфигурировании скриптов, запускающих и останавливающих процессы. Конечно же, вручную править скрипты не приходится, и система следит за файлами без нас, но знать о такой особенности загрузки вы должны. Например, вы хотите, чтобы какой-то демон не запускался при старте системы на третьем уровне. Для этого можно просто удалить соответствующий файл из каталога/etc/rc.d/rc3.d,или сделать так, чтобы его имя не начиналось с букв "S" или "K".
   В каталоге/etc/rc.d/init.dнаходятся скрипты, которые запускают, останавливают или перезапускают сервисы в системе. Именно эти файлы используются при переходе с одного уровня на другой.
   Очень интересной является строка:
   ca::ctrlaltdel:/sbin/shutdown -t3 -r now
   Она выполняется на любом уровне, потому что второй аргумент отсутствует. Третий параметр равенctrlaltdel.Это значит, что по нажатию клавиш&lt;Ctrl&gt;+&lt;Alt&gt;+&lt;Del&gt;будет выполнена указанная команда. В большинстве ОС такая комбинация используется для перезагрузки системы. Какая директива выполнится в Linux? Это/sbin/shutdown -t3 -r now.Мы уже знаем, что командаshutdownс ключом-r— это перезагрузка. Параметр-tXзадает время задержки, гдеX— количество секунд до рестарта.
   Получается, что по нажатию клавиш&lt;Ctr&gt;+&lt;Alt&gt;+&lt;Del&gt;запустится директива, требующая через три секунды перезагрузить систему.
   Теперь посмотрим на строку, которая будет выполнена при сбое питания:
   pf::powerfail:/sbin/shutdown -f -h +2 "Power Failure; System Shutting Down"
   Строка выполняется на любом уровне. Здесь снова участвует командаshutdown,но теперь с другими ключами:
   ? -f— отменяет проверку диска fsck;
   ? -h— указывает на необходимость выключения питания;
   ? +2— задает время в минутах до перезагрузки;
   ? далее идет в кавычках сообщение, которое появится на каждой консоли. В графическом режиме все пользователи увидят окно с предупреждением такого же содержания.
   Обратите внимание, что время до перезагрузки 2 минуты. Это очень мало, т.к. простые источники бесперебойного питания могут продлить работу компьютера до 20 минут. А если учесть, что серверы чаще всего стоят без монитора или, в крайнем случае, с выключенным дисплеем, то жизнь сервера может быть продлена до 40 минут. Значение в две минуты явно занижено, и я рекомендую проверить документацию на ваш источник бесперебойного питания и увеличить тайм-аут, чтобы сервер не ушел в перезагрузку раньше времени.
   Теперь посмотрим, что происходит при восстановлении питания:
   pr:12345:powerokwait:/sbin/shutdown -с "Power Restored; Shutdown Cancelled"
   Команда выполняется на уровнях с 1 по 5 и отменяет перезагрузку. На 0 и 6 уровнях, когда уже начался процесс выключения системы или рестарт, аннулировать что-либо уже поздно.
   Отмена происходит вызовом командыshutdownс ключом-с,после чего идет текст сообщения о том, что питание восстановилось, и можно работать.
   Теперь посмотрим на следующие строки:
   1:2345:respawn:/sbin/mingetty tty1
   2:2345:respawn:/sbin/mingetty tty2
   3:2345:respawn:/sbin/mingetty tty3
   4:2345:respawn:/sbin/mingetty tty4
   5:2345:respawn:/sbin/mingetty tty5
   6:2345:respawn:/sbin/mingetty tty6
   Здесь на шести терминалах (ttyX, где X — это номер терминала или виртуальной консоли) выдается сообщение на вход в систему. Это не есть хорошо, потому что хакер может воспользоваться любой консолью для проникновения в систему (в качестве администратора). Чтобы этого не произошло, можно запретить вход со всех терминалов, кроме одного. Для этого нужно заменить флагrespawnнаoff.
   Вообще-то можно это и не делать. Есть способ лучше — конфигурирование настроек tty, которые находятся в файле/etc/securetty.Пример такого файла вы можете увидеть в листинге 3.3.Листинг 3.3. Файл /etc/securetty
   vc/1
   vc/2
   vc/3
   vc/4
   vc/5
   vc/6
   vc/7
   vc/8
   vc/9
   vc/10
   vc/11
   tty1
   tty2
   tty3
   tty4
   tty5
   tty6
   tty7
   tty8
   tty9
   tty10
   tty11
   Этот файл определяет консоли и терминалы, с которых можно подключаться с правамиroot.Первые одиннадцать строк определяют 11 виртуальных консолей, остальные — назначают окна терминалов. Чтобы разрешить вход с одного терминала, оставьте только строкуtty1,а все остальные удалите. Таким образом, терминалы будут доступны для работы, но только с первого можно подключиться с правамиroot.
   Для переключения между виртуальными консолями нужно нажать клавишу&lt;Alt&gt;и любую клавишу от&lt;F1&gt;до&lt;F6&gt;.
   Самая последняя строка выполняется только на 5 уровне:
   x:5:respawn:/etc/X11/prefdm -nodaemon
   Эта строка запускает команду/etc/X11/prefdm,которая переводит работу в графический режим и отображает соответствующее окно входа в систему, которое мы рассматривали вразд. 2.7.Если вы используете текстовый режим, то для запуска графической оболочки можно использовать описанную ранее команду.
   Если нужно, чтобы программа инициализации просмотрела конфигурационный файл inittab без смены уровня, то можно вручную принудитьinitзапуститься. Для этого выполните команду:
   /etc/init q
   Для перехода на другой уровень необходимо выполнить команду:
   telinit X
   где X — новый уровень, на котором должна работать ОС. Эта команда удобна, если вы грузитесь на пятом уровне. В этом случае легко перейти в текстовый режим на уровень3.Если завершать графический режим штатными средствами оболочки, то ОС не будет выходить в текстовый режим, а останется графическое приглашение на ввод пароля.
   А теперь небольшой фокус. Что будет, если воспользоваться командойtelinit 6?Конечно же, начнется перезагрузка системы (в соответствии с назначением 6 уровня). А при выполнении командыtelinit 0 (переход на нулевой уровень) произойдет выключение системы, как при выполнении командыshutdown -h now.
   И все же я не советую употреблять переходы на 0 и 6 уровни, а использовать законный выход, т.е. командуshutdown.
   3.2.4.Интересные настройки загрузки
   Рассмотрим парочку файлов, которые хоть и незначительно, но влияют на загрузку.
   Прежде чем появится приглашение ввести пароль, на экране отображается текстовая информация, пояснение. Чаще всего, здесь разработчик пишет имя дистрибутива и его версию. Эта информация хранится в файле/etc/issue,и вы легко можете его изменить в любом текстовом редакторе, в том числе и во встроенном в Midnight Commander.
   После входа в систему тоже может выводиться текстовое сообщение, но по умолчанию в большинстве дистрибутивов оно отсутствует. Текст этого сообщения находится в файле/etc/motd,он может содержать новости для пользователей системы или каким-либо образом информировать об изменениях. Например, каждого первого числа месяца напоминать о необходимости сменить пароль.
   3.3.Регистрация в системе
   Теперь познакомимся с процессом регистрации пользователя в системе. Это поможет вам лучше понять систему безопасности, которая используется в ОС Linux при авторизации.
   Мы уже знаем изразд. 3.2,что программа init загружает виртуальные консолиgetty.Каждая из них для работы требует авторизации и запрашивает имя пользователя. Для этого на экран выводится окно приглашения. Введенное имя пользователя передаетсяпрограммеlogin,а она в свою очередь запрашивает пароль.
   Программа login сравнивает имя пользователя со списком имен в файле/etc/password,а пароль — с соответствующей записью в файле/etc/shadow.Все пароли в файле хранятся только в зашифрованном виде. Для сопоставления введенный пароль тоже шифруется, и результат сравнивается со значением в файле/etc/shadowдля указанного имени пользователя.
   Почему так сложно происходит проверка? Просто все пароли в файле/etc/shadowзашифрованы необратимым алгоритмом (чаще всего используется алгоритм MD5). Это значит, что математическими методами из результата кодирования нельзя получить исходный пароль, поэтому возможен только подбор. Для этого существует несколько очень простых программ. Чем проще пароль и меньше его длина, тем быстрее программа найдет нужный вариант. Если пароль сложен и его длина более 8 символов, а лучше — свыше 16, то подбор может отнять слишком много времени.
   Если идентификация пользователя состоялась, то программа login выполнит все автоматически загружаемые сценарии и запустит оболочку (командную строку), через которую и будет происходить работа с системой. Если проверка прошла неудачно, то система вернет управление консолиgetty,которая снова запросит ввод имени пользователя.
   Таким образом, пока мы не пройдем авторизацию через программу login, запустить командную оболочку (Shell) невозможно, нам останется доступной лишь консольgetty,которая умеет только запрашивать имя пользователя и передавать его программе login.
   Теперь обсудим некоторые проблемы, которые могут возникнуть при входе в систему, и посмотрим, как они решаются.
   3.3.1.Теневые пароли
   В старых версиях Linux список пользователей и пароли хранились в файле/etc/password.Это не очень хорошо, потому что данный файл должен быть доступен для чтения всем пользователям, т.к. имена пользователей требуются очень многими безобидными программами. Например, при выполнении командыls (просмотр файлов текущего каталога) нужно получить доступ к списку пользователей для получения имен владельцев файлов. Поскольку файл легко прочитать любому пользователю, то и зашифрованные варианты паролей тоже доступны, а значит, любой хакер сможет запустить подбор паролей и ждать заветного часа X, когда будет найдена нужная комбинация.
   Чтобы защитить пароли, во всех современных версиях Linux их прячут в файл/etc/shadow,который доступен для чтения только администраторуroot.Файл/etc/passwordостался открытым для всех, но теперь в нем уже нет пароля. Давайте посмотрим, как выглядит файл/etc/password.Для примера я взял только верхние три строки из своего файла:
   root:x:0:0:root:/root:/bin/bash
   bin:x:1:1:bin:/bin:/sbin/nologin
   daemon:x:2:2:daemon:/sbin:/sbin/nologin
   Каждая строка содержит информацию о пользователе — семь аргументов, разделенных между собой двоеточием. Давайте разберем каждый из них:
   ? имя пользователя — login, который вы вводите;
   ? пароль — если вывод затенен, то вместо пароля будет стоять символx;
   ? UID — уникальный идентификатор пользователя;
   ? GID — уникальный идентификатор группы;
   ? информация о пользователе — здесь может быть полное имя, адрес и т.д.;
   ? домашняя директория — каталог, принадлежащий пользователю, с которым он начинает работать при входе в систему;
   ? интерпретатор команд — оболочка, которая будет выполнять команды пользователя. Если интерпретатора команд не должно быть, то указывается файл/sbin/nologin.
   Теперь посмотрим на строку для пользователя root. Первый параметр — это имя, и, конечно же, тут написано root. Пароля в файле нет, т.к. вместо него мы видим символx (или!!),а он находится в соответствующей записи файла/etc/shadow.
   Следующие два параметра — уникальный идентификатор пользователя (UID) и уникальный идентификатор группы (GID). В файле не может быть двух записей с одним и тем же UID. По GID система находит группу, в которую входит пользователь и, соответственно, определяет права, которые даны этой группе, а значит, и пользователю.
   Информация о пользователе может быть любой, и на работу системы она не влияет. Это просто пояснение, которое администратор использует по своему усмотрению.
   Далее идет домашняя директория. Это каталог, который открывается пользователю при входе в систему.
   Последний параметр — это командный интерпретатор, который будет обрабатывать пользовательские запросы. Наиболее распространенным является интерпретатор/bin/bash.Если команды пользователя не должны выполняться, то в качестве этого параметра устанавливается /sbin/nologin.Именно это значение введено для записейbin,daemonи многих других, потому что под ними нельзя входить в систему и они предназначены только для внутреннего обеспечения безопасности определенных программ.
   Теперь посмотрим на файл/etc/shadow,а точнее, возьмем только первые три строки. Для примера этого будет достаточно:
   root:$1$1emP$XMJ3/GrkltC4c4h/:12726:0:99999:7:::
   bin:*:12726:0:99999:7:::
   daemon:*:12726:0:99999:7:::
   Здесь также несколько параметров, разделенных двоеточием. Нас будут интересовать первые два: login и пароль. По имени пользователя происходит связь записи из файла/etc/shadowс файлом/etc/password.А вот во втором параметре уже находится настоящая зашифрованная версия пароля. Но если вместо него стоят звездочки, то это запрет на использование записи. Например, для пользователейbinиdaemonустановлены именно звездочки, а значит, под этими учетными записями нельзя входить на компьютер.
   3.3.2.Забытый пароль
   Что делать, если вы забыли пароль, или хакер проник в систему и изменил его? Действительно, ситуация не из приятных, но все решаемо. Если у вашей учетной записи есть доступ к файлу/etc/shadow,то можно заняться его редактированием, а если нет, то посмотрим, как получить доступ с загрузочной дискеты.
   Загрузившись с дискеты, вы должны войти в систему как root и подключить тот жесткий диск (или раздел диска), на котором находится папка/etc.Для этого нужно выполнить команду:
   /sbin/mount -w hda1 /mnt/restore
   Теперь директория/mnt/restore (желательно, чтобы она существовала до выполнения команды) указывает на главный раздел вашего жесткого диска, а файл паролей находится в каталоге/mnt/restore/etc/shadow.Откройте этот файл в любом редакторе и удалите пароль администратора root (просто сотрите весь текст между первым и вторым знаком двоеточия). В моем случае получилось:
   root::12726:0:99999:7:::
   Теперь обычным способом загружайте систему и в качестве имени пользователя вводите имя root. У вас даже не спросят пароль, потому что он пустой. Не забудьте поменять пароль, иначе это будет опасно для жизни. Это как электрику работать под высоким напряжением без средств защиты?.
   Для смены пароля вы должны набрать командуpasswd root,в ответ запустится программа, которая попросит вас дважды ввести код. Такой подход исключает случайную опечатку при наборе и может с определенной долей вероятности гарантировать, что сохранен верный пароль.
   3.3.3.Модули аутентификации
   Аутентификация на основе двух файлов/etc/passwdи/etc/shadowнемного устарела и предоставляет нам слишком скудные возможности. Разработчики ядра ОС Linux стараются исправить ситуацию с помощью добавления новых алгоритмов шифрования, но все эти попытки чисто косметические, а нам необходимо кардинальное изменение.
   Абсолютно новое решение для реализации аутентификации предложила компания Sun — Pluggable Authentication Modules (РАМ, подключаемые модули аутентификации).
   Преимущество модульной аутентификации заключается в том, что не требуется перекомпиляция программы для их использования. Существуют модули для основных методов аутентификации, таких как Kerberos, SecureID, LDAP и др.
   Конфигурационные файлы для каждого сервиса, который может использовать РАМ, находятся в директории/etc/pam.d.В большинстве случаев вам не придется создавать эти файлы вручную, потому что они устанавливаются во время инсталляции программы из RPM-пакета. Но вы должны знать их структуру, чтобы можно было изменить какие-то параметры в случае необходимости.
   Каждая строка в конфигурационном файле состоит из четырех полей, разделенных пробелами:
   ? тип модуля — может принимать одно из следующих значений:
    • auth— аутентификация и проверка привилегий пользователей;
    • account— распределение ресурсов системы между пользователями;
    • session— поддержка сессии и регистрации действий пользователей;
    • password— проверка пароля;
   ? флаг — определяет параметры модуля. Здесь можно использовать три значения:
    • required— обязательный;
    • optional— необязательный;
    • sufficient— достаточный;
   ? полный путь к файлу модуля;
   ? аргументы модуля.
   Рассмотрим пример конфигурационного файла для FTP-сервиса, который находится в файле/etc/pam.d/ftp.
   #%PAM-1.0
   auth    required /lib/security/pam_listfile.so item=user sense=deny
    file=/etc/ftpusers onerr=succeed
   auth    required /lib/security/pam_stack.so    service=system-auth
   auth    required /lib/security/pam_shells.so
   account required /lib/security/pam_stack.so    service=system-auth
   session required /lib/security/pam_stack.so    service=system-auth
   Это и все, что вам необходимо знать. Остальное берет на себя программа сервиса без нашего вмешательства.
   3.4.Процессы
   Для того чтобы эффективно управлять своим компьютером, вы должны досконально изучить свой сервер и работающие на нем процессы. Взломав ваш сервер, злоумышленник постарается запустить на нем какую-либо программу, которая незаметно будет выдавать хакеру права root в системе. Таких программ в сети великое множество, и к ним относятся различные троянские программы.
   Процесс — это программа или ее потомок. При запуске программы создается новый процесс, в котором и работает код. Каждая программа должна функционировать с определенными правами. Сервисы, которые активизируются при старте системы, обладают правами root или nobody (без прав). Программы, которые выполняются из командной строки, наделены правами запустившего пользователя, если не указан SUID- или SGID-бит, при котором программа имеет права владельца.
   Существует два основных типа процессов — фоновый (background) и центральный (foreground). Центральный процесс для определенного терминала может быть только один. Например, запустив по команде ls программу man для просмотра помощи, вы не сможете выполнять другие команды, пока не выйдете из программы man.
   У тех, кто знаком с программой Midnight Commander, может возникнуть вопрос — а как же тогда работает МС и одновременно в нем можно выполнять команды? Ответ прост, процессы могут порождать другие процессы. То же происходит и в МС, но если его закрыть, то закроются и все порожденные процессы.
   3.4.1.Смена режима
   Фоновыми процессами являются все сервисы. Они выполняют свои действия параллельно с вашей работой. Но вы в фоновом режиме можете запустить любую программу. Для этого достаточно после указания команды через пробел поставить знак "&".Например, выполните сейчас следующую команду:
   man ls&
   В ответ на это вы не увидите файл помощи, а на экране появится только строка:
   [1] 2802
   После этого терминал снова готов